{"version":3,"sources":["webpack:///src/app/utils/plus-badge/plus-badge.component.ts","webpack:///src/app/utils/plus-badge/plus-badge.component.html","webpack:///src/app/guards/leaderboard-auth.guard.ts","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/services/guild.service.ts","webpack:///src/app/pages/plus/plus/plus.component.ts","webpack:///src/app/pages/plus/plus/plus.component.html","webpack:///src/app/utils/plus-paywall/plus-paywall.component.ts","webpack:///src/app/utils/plus-paywall/plus-paywall.component.html","webpack:///src/app/services/commands.service.ts","webpack:///src/app/zippy/zippy.component.ts","webpack:///src/app/zippy/zippy.component.html","webpack:///src/app/dashboard/guild/logs-module/logs-module.component.html","webpack:///src/app/dashboard/guild/logs-module/logs-module.component.ts","webpack:///src/app/dashboard/guild/warnings-widget/warnings-widget.component.html","webpack:///src/app/dashboard/guild/warnings-widget/warnings-widget.component.ts","webpack:///src/app/pipes/mini-date.pipe.ts","webpack:///src/app/dashboard/dashboard/reaction-roles-module/reaction-roles-module.component.html","webpack:///src/app/dashboard/dashboard/reaction-roles-module/reaction-roles-module.component.ts","webpack:///src/app/pages/auth/logout/logout.component.ts","webpack:///src/app/pages/auth/logout/logout.component.html","webpack:///src/app/utils/discord/message-embed-preview/message-embed-preview.component.ts","webpack:///src/app/utils/discord/message-embed-preview/message-embed-preview.component.html","webpack:///src/app/dashboard/guild/warnings-module/warnings-module.component.html","webpack:///src/app/dashboard/guild/warnings-module/warnings-module.component.ts","webpack:///src/app/dashboard/guild/general-module/general-module.component.html","webpack:///src/app/dashboard/guild/general-module/general-module.component.ts","webpack:///src/app/dashboard/guild/leveling-module/leveling-module.animations.ts","webpack:///src/app/pages/payment-success/payment-success.component.ts","webpack:///src/app/pages/payment-success/payment-success.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/dashboard/guild/log-module/log-module.component.html","webpack:///src/app/dashboard/guild/log-module/log-module.component.ts","webpack:///src/app/dashboard/guild/leveling-module/leveling-module.component.html","webpack:///src/app/dashboard/guild/leveling-module/leveling-module.component.ts","webpack:///src/app/dashboard/guild/leaderboard-module/leaderboard-module.component.html","webpack:///src/app/dashboard/guild/leaderboard-module/leaderboard-module.component.ts","webpack:///src/app/utils/discord/member-username/member-username.component.ts","webpack:///src/app/utils/discord/member-username/member-username.component.html","webpack:///src/app/utils/discord/save-changes/save-changes.component.ts","webpack:///src/app/utils/discord/save-changes/save-changes.component.html","webpack:///src/app/pipes/camel-to-sentence-case.pipe.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/utils/discord/message-preview/message-preview.component.ts","webpack:///src/app/utils/discord/message-preview/message-preview.component.html","webpack:///src/app/utils.ts","webpack:///src/app/guards/dashboard-auth.guard.ts","webpack:///src/app/pages/auth/login/login.component.ts","webpack:///src/app/pages/auth/login/login.component.html","webpack:///src/app/services/music.service.ts","webpack:///src/app/dashboard/dashboard/customize-xp-card/customize-xp-card.component.html","webpack:///src/app/dashboard/dashboard/customize-xp-card/customize-xp-card.component.ts","webpack:///src/app/dashboard/guild/music-module/music-module.component.html","webpack:///src/app/dashboard/guild/music-module/music-module.component.ts","webpack:///src/app/dashboard/widgets/audit-log-widget/audit-log-widget.component.html","webpack:///src/app/dashboard/widgets/audit-log-widget/audit-log-widget.component.ts","webpack:///src/app/dashboard/guild/captcha-module/captcha-module.component.html","webpack:///src/app/dashboard/guild/captcha-module/captcha-module.component.ts","webpack:///src/app/dashboard/dashboard/dashboard-overview/dashboard-overview.component.html","webpack:///src/app/dashboard/dashboard/dashboard-overview/dashboard-overview.component.ts","webpack:///src/app/dashboard/guild/guild-sidebar/guild-sidebar.component.html","webpack:///src/app/dashboard/guild/guild-sidebar/guild-sidebar.component.ts","webpack:///src/app/dashboard/guild/guild/guild.component.html","webpack:///src/app/dashboard/guild/guild/guild.component.ts","webpack:///src/app/pipes/clean-date-time.pipe.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/pages/commands/commands.component.html","webpack:///src/app/pages/commands/commands.component.ts","webpack:///src/app/guards/guild-auth.guard.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/stats/stats.component.html","webpack:///src/app/stats/stats.component.ts","webpack:///src/app/services/theme.service.ts","webpack:///src/app/pipes/snake-to-sentence-case.pipe.ts","webpack:///src/app/app.module.ts","webpack:///src/app/zippy/zippy.component.animations.ts","webpack:///src/environments/environment.prod.ts","webpack:///src/app/stats/popular-inputs-graph/popular-inputs-graph.component.html","webpack:///src/app/stats/popular-inputs-graph/popular-inputs-graph.component.ts","webpack:///src/app/pipes/truncated.pipe.ts","webpack:///src/app/services/pay.service.ts","webpack:///src/app/pages/plus/plus-card/plus-card.component.ts","webpack:///src/app/pages/plus/plus-card/plus-card.component.html","webpack:///src/app/module-config.ts","webpack:///src/app/utils/spinner/spinner.component.ts","webpack:///src/app/utils/spinner/spinner.component.html","webpack:///src/app/material-module.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/dashboard/dashboard/dashboard-sidebar/dashboard-sidebar.component.ts","webpack:///src/app/dashboard/dashboard/dashboard-sidebar/dashboard-sidebar.component.html","webpack:///src/app/dashboard/guild/auto-mod-module/auto-mod-module.component.html","webpack:///src/app/dashboard/guild/auto-mod-module/auto-mod-module.component.ts","webpack:///src/app/dashboard/sidebar/sidebar.component.ts","webpack:///src/app/dashboard/sidebar/sidebar.component.html","webpack:///src/app/dashboard/guild/compose-embed-module/compose-embed.component.html","webpack:///src/app/dashboard/guild/compose-embed-module/compose-embed.component.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/guards/can-deactivate-dashboard.guard.ts","webpack:///src/app/dashboard/dashboard/settings-module/settings-module.component.html","webpack:///src/app/dashboard/dashboard/settings-module/settings-module.component.ts","webpack:///src/app/dashboard/directives/premium.directive.ts","webpack:///src/app/pages/not-found/not-found.component.ts","webpack:///src/app/pages/not-found/not-found.component.html","webpack:///src/app/pipes/duration-string.pipe.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/xp-card/xp-card.component.ts","webpack:///src/app/xp-card/xp-card.component.html","webpack:///src/app/stats/popular-commands-graph/popular-commands-graph.component.html","webpack:///src/app/stats/popular-commands-graph/popular-commands-graph.component.ts","webpack:///src/app/pages/auth/auth/auth.component.ts","webpack:///src/app/pages/auth/auth/auth.component.html","webpack:///src/app/utils/waves/waves.component.ts","webpack:///src/app/utils/waves/waves.component.html","webpack:///src/app/dashboard/widgets/commands-widget/commands-widget.component.html","webpack:///src/app/dashboard/widgets/commands-widget/commands-widget.component.ts","webpack:///src/main.ts","webpack:///src/app/pages/auth/invite/invite.component.ts","webpack:///src/app/pages/auth/invite/invite.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["PlusBadgeComponent","selector","templateUrl","styleUrls","LeaderboardAuthGuard","guildService","userService","next","state","id","paramMap","get","getSavedGuild","guildConfig","settings","privateLeaderboard","getMembers","members","some","m","user","providedIn","HomeComponent","route","version","Sent","author","username","avatarURL","document","title","init","offset","duration","getElementById","scrollIntoView","behavior","toFeatures","GuildService","http","endpoint","singleton","_guilds","localStorage","getItem","guilds","length","updateGuilds","key","toPromise","find","g","guildId","userId","channelId","embedData","post","module","value","put","messageId","PlusComponent","pay","checkoutEndpoint","oneDay","firstDate","Date","getTime","secondDate","savedUser","premiumExpiration","Math","round","abs","status","snapshot","queryParamMap","alert","plan","window","location","href","payURL","checkout","PlusPaywallComponent","CommandsService","_commands","commands","updateCommands","query","fuse","includeScore","keys","name","weight","search","map","r","item","ZippyComponent","expanded","toggle","animations","LogsModuleComponent","saveChanges","EventType","moduleName","events","Ban","LevelUp","MemberJoin","MemberLeave","MessageDeleted","Unban","Warn","eventConfigs","savedGuild","logs","formGroup","i","event","config","e","push","enabled","channel","message","LogsMessage","maxLength","embed","description","image","color","thumbnail","text","footer","timestamp","filter","eventType","filterFormEvents","form","submit","WarningsWidgetComponent","chartReady","barChartOptions","responsive","scales","yAxes","display","xAxes","plugins","datalabels","anchor","align","barChartLabels","barChartType","barChartLegend","barChartPlugins","barChartData","subscribe","val","getWarnings","warnings","buildLabels","buildDataSets","labels","date","setDate","getDate","ddMM","sets","data","label","warning","at","dayIndex","indexOf","toString","padStart","getMonth","MiniDatePipe","dateString","ReactionRolesModuleComponent","reactionRoleMessages","reactionRolesIndices","reactionRoles","console","log","reactionRolesLength","updateReactionRolePreviews","configs","emojiPattern","setControl","role","emote","pattern","controls","getMessage","msg","Object","LogoutComponent","router","removeItem","updateUser","navigate","MessageEmbedPreviewComponent","guild","memberCount","eventVariables","content","footerText","footerImage","hidden","embedAuthor","icon","url","embedImage","member","displayName","createdAt","toTimeString","slice","wasToday","getDay","wasYesterday","isTommorow","toJSON","split","reverse","join","open","replace","JSON","stringify","prefix","match","textBeforeUrl","urlIndex","textBeforeUrlIndex","substring","getTextBeforeUrl","getUrlFromDescription","replaceText","includes","openLink","WarningsModuleComponent","service","displayedColumns","dataSource","paginator","sort","filterValue","target","trim","toLowerCase","firstPage","applyFilter","GeneralModuleComponent","general","required","ignoredChannels","autoRoles","slideUpDown","height","PaymentSuccessComponent","secondsDelay","setTimeout","environment","production","discordInvite","CLIENT_SECRET","botOwnerId","LogModuleComponent","changes","getSavedLog","LevelingModuleComponent","levelRoleIndices","leveling","ignoredRoles","levelRoles","maxMessagesPerMinute","min","max","xpPerMessage","buildLevelRolesFormArray","level","c","Number","xpPerMinute","xpRequired","getXPForLevel","LeaderboardModuleComponent","getPublicGuild","MemberUsernameComponent","withAvatar","SaveChangesComponent","snackBar","onReset","onSave","emit","close","dismiss","unsubscribe","reset","save","CamelToSentenceCasePipe","words","ApiService","MessagePreviewComponent","toIterable","array","camelToSentenceCase","regex","toUpperCase","sentenceToCamelCase","capitalized","group","kebabToCamelCase","arr","capital","index","charAt","DashboardAuthGuard","canActivate","Boolean","LoginComponent","assign","MusicService","_list","_paused","_current","_max","Infinity","paused","list","clearInterval","refreshList","setInterval","incrementPosition","updateList","splice","position","CustomizeXPCardComponent","xpCardUpdate","stockImages","colors","primary","secondary","tertiary","colorPickers","backgroundURL","initFormValues","updatePreview","xpCard","setValue","updateXPCard","setValues","hexToRGB","xpCardPreviewURL","getXPCardPreviewURL","hex","result","exec","parseInt","b","MusicModuleComponent","minSearchLength","activeElement","music","a","AuditLogWidgetComponent","rows","changeCount","CaptchaModuleComponent","captchaSettings","captchaChannel","unverifiedRole","verifiedRole","DashboardOverviewComponent","apiService","StatsShown","hasPerms","reps","userTitle","hour","getHours","forEach","getBalance","balance","getSavedMember","savedmember","savedMember","getMemberStatus","userHasPerms","getReminders","userReminders","reminders","reminder","expiresMilliseconds","now","adminDashboard","GuildSidebarComponent","loaded","getGuild","GuildComponent","botNeedsPerms","getBotStatus","hasAdmin","CleanDateTimePipe","hours","minutes","getMinutes","day","month","toLocaleString","getFullYear","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","webpackContextKeys","resolve","exports","CommandsComponent","displayedCommands","modules","selectedModule","getCommands","customCommands","alias","command","summary","usage","anywhere","setModule","empty","GuildAuthGuard","getChannels","getRoles","channels","roles","AppComponent","commandService","themeService","updateTheme","StatsComponent","api","getStats","stats","ThemeService","defaultTheme","theme","setItem","querySelector","setAttribute","SnakeToSentenceCasePipe","w","AlertErrorHandler","error","rejection","fetch","method","headers","body","AppModule","provide","useClass","useValue","languages","getHighlightLanguages","withServerTransition","appId","declarations","imports","providers","bootstrap","json","expandCollapse","padding","PopularInputsGraphComponent","reversed","inputs","path","s","count","TruncatedPipe","PayService","PlusCardComponent","price","ModuleConfig","textChannels","type","originalSavedGuild","parse","resetForm","valueChanges$","valueChanges","openSaveChanges","buildForm","addControl","snackBarRef","_openedSnackBarRef","valid","routeName","saveChanges$","openFromComponent","afterOpened","component","instance","invalid","saveGuild","input","SpinnerComponent","MaterialModule","NavbarComponent","bg","DashboardSidebarComponent","AutoModModuleComponent","maxRules","filters","MessageFilter","Links","Words","MassMention","MassCaps","autoMod","banWords","banLinks","autoDeleteMessages","autoWarnUsers","filterThreshold","punishments","Array","fill","patchValue","SidebarComponent","classList","drawer","EmbedComposeModuleComponent","disabled","canSend","messageContent","authorImage","authorName","authorUrl","dataToBeSent","sendEmbed","then","err","UserService","_user","_crash","_savedUser","crash","CanDeactivateDashboard","currentRoute","currentState","nextState","SettingsModuleComponent","PremiumDirective","elementRef","el","nativeElement","onclick","NotFoundComponent","DurationStringPipe","seconds","floor","routes","canDeactivate","AppRoutingModule","forRoot","initialNavigation","XPCardComponent","xpCardURL","randomString","random","PopularCommandsGraphComponent","AuthComponent","WavesComponent","inverted","CommandsWidgetComponent","commonCommand","borderColor","backgroundColor","pointBackgroundColor","addEventListener","bootstrapModule","InviteComponent","webpackEmptyAsyncContext","Promise"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'plus-badge',\r\n  templateUrl: './plus-badge.component.html',\r\n  styleUrls: ['./plus-badge.component.css']\r\n})\r\nexport class PlusBadgeComponent {}\r\n","<span\r\n  routerLink=\"/plus\"\r\n  class=\"cursor-pointer uppercase float-right badge badge-success\"\r\n  matTooltip=\"This is a Neko+ feature.\">Plus</span>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { GuildService } from '../services/guild.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LeaderboardAuthGuard implements CanActivate {\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private userService: UserService) {}\r\n\r\n  async canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const id = next.paramMap.get('id');\r\n    const guildConfig = await this.guildService.getSavedGuild(id);\r\n    if (guildConfig?.settings.privateLeaderboard) {\r\n      const members = await this.guildService.getMembers(id);\r\n      return members.some(m => m.id === this.userService.user.id);\r\n    }\r\n    return !guildConfig || !guildConfig.settings.privateLeaderboard;\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport AOS from 'aos'\r\nimport { GuildService } from 'src/app/services/guild.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent {\r\n  version = environment.version;\r\n  NekoMessageValue: string;\r\n  Sent: Boolean = false;\r\n\r\n  author = {\r\n    username: 'Neko',\r\n    avatarURL: 'https://cdn.discordapp.com/avatars/743633561768296599/1ba7c76c436cd2dee8cb2e439ccb7211.webp?size=128'\r\n  }\r\n\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    document.title = 'Neko - Discord Bot';\r\n  }\r\n\r\n  async ngOnInit() {\r\n    AOS.init({\r\n      offset: 400,\r\n      duration: 2000\r\n    });\r\n\r\n  }\r\n\r\n  toFeatures() { document.getElementById('features').scrollIntoView({behavior: \"smooth\"}) }\r\n}\r\n/*\r\n            <q>\r\n            <div class=\"col-lg-6 col-md-12 order-lg-7 order-8 feature\">\r\n                <h3>Automate Tasks, Messages, and More! <i class=\"fa fa-code\" aria-hidden=\"true\"></i></h3>\r\n                <p class=\"lead\">Automate any command, in any channel, whenever. With timers, you can schedule commands and messages. Timers is an advanced feature with nearly endless possibilites.</p>\r\n            </div>\r\n            <div class=\"col-lg-6 col-md-12 order-lg-8 order-7\">\r\n                <img class=\"responsive\" src=\"assets/img/test/timers.png\" alt=\"Timers\">\r\n            </div>\r\n            </q>\r\n */\r\n","\r\n<header>    \r\n    <div class=\"jumbotron\"> \r\n        <navbar></navbar>\r\n\r\n        <div class=\"container\">\r\n            <h2 id=\"title\">Welcome To Femboy Fantasy</h2>\r\n            <p id=\"subTitle\">Femboys • Cute emojis • Friendly Staff • Aethentic • Vibes • Much More </p>\r\n            <div class=\"lead\" style=\" position: absolute; margin-left: 10px\">\r\n                <button class=\"addButton mr-4\" routerLink=\"/invite\" mat-button>\r\n                    <i class=\"fab fa-discord\" style=\"color: white; font-size: 34px; margin-right: 10px;\"></i>\r\n                    Join us Now\r\n                </button>\r\n\r\n                <a class=\"text-light text-decoration-none\"(click)=\"toFeatures()\">\r\n                    <button class=\"text-light FeatureButton\" mat-button>Features</button>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</header>\r\n\r\n<section id=\"features\" class=\"my-5\" style=\"overflow-x: hidden;\">\r\n    <div class=\"container\">\r\n        <div class=\"row text-light\" style=\"justify-content: center;\">\r\n    \r\n\r\n\r\n            <div class=\"col-lg-6 col-md-12 order-3 MessageLeveling\" data-aos=\"fade-left\" data-aos-duration=\"0\">\r\n                <img id=\"MessageLeveling\" class=\"responsive\" src=\"assets/img/MessageLeveling.svg\">\r\n            </div>\r\n            <div class=\"col-lg-6 col-md-12 order-4 feature\" data-aos=\"fade-left\">\r\n                <h3 style=\"font-weight: 700; \">Message Leveling <i class=\"fas fa-arrow-up\" aria-hidden=\"true\"></i> </h3>\r\n                <p>Level up as you become more active in the community. Experience everything and more by messaging and leveling using {{ author.username }} in the server and gathering new skills.</p>\r\n            </div>\r\n            \r\n            <div class=\"col-lg-6 col-md-12 order-lg-6 order-5 Leaderboard\" data-aos=\"fade-right\" data-aos-duration=\"0\">\r\n                <img class=\"responsive\" src=\"assets/img/leaderboards.svg\" alt=\"Leaderboard\">\r\n            </div>\r\n            <div class=\"col-lg-6 col-md-12 order-lg-5 order-6 feature\" data-aos=\"fade-right\">\r\n                <h3 style=\"font-weight: 700; \" >Earn Levels and Compete with Others <i class=\"fa fa-trophy\" aria-hidden=\"true\"></i></h3>\r\n                <p>Level up through our servers roles and recieve perks! With {{ author.username }}'s Leveling system, compete with others, and climb to the top of the leaderboards. </p>\r\n            </div>\r\n\r\n            <div class=\"col-lg-6 col-md-12 order-7 Announce\" data-aos=\"fade-left\" data-aos-duration=\"0\">\r\n                <img id=\"leaderboard\" class=\"responsive\" src=\"assets/img/dashboard.svg\" alt=\"Announce\">\r\n            </div>\r\n            <div class=\"col-lg-6 col-md-12 order-8 feature\" data-aos=\"fade-left\">\r\n                <h3 style=\"font-weight: 700; \" >User Friendly Dashboard <i class=\"fas fa-cogs\" aria-hidden=\"true\"></i></h3>\r\n                <p>Have a quick and easy view your stats in the sever! With {{ author.username }}'s simple and easy to use dashboard, monitor your statistics with ease and make any adjustments with a single click.</p>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section class=\"container text-center\">\r\n    <h2 style=\"font-size: 28x; \">What are you waiting for?</h2>\r\n    <button class=\"addButton\" routerLink=\"/invite\" mat-button>\r\n        <i class=\"fab fa-discord\" style=\"color: white; font-size: 34px; margin-right: 10px;\"></i>\r\n        Join us Now\r\n    </button>\r\n</section>\r\n\r\n<footer>\r\n    <waves></waves>\r\n    <div class=\"content d-flex flex-column justify-content-end\">\r\n        <span class=\"right\">\r\n            <div class=\"ml-4\">\r\n                <h2 style=\"font-size: 22px;\">StardewFemboys.xyz</h2>\r\n                <span class=\"d-flex align-items-center\" >\r\n                    <button mat-button class=\"bottomButton mr-2\" id=\"joinButton\" routerLink=\"/invite\">\r\n                        Join Now\r\n                    </button>\r\n                    <button mat-button class=\"bottomButton\" id=\"feedbackButton\">\r\n                        Give Feedback\r\n                    </button>\r\n                </span>\r\n            </div>\r\n            <span class=\"d-flex justify-content-center\" style=\"margin-bottom: 2vh;\">\r\n                <a routerLink=\"/invite\" target=\"_blank\" class=\"socialButtons\">\r\n                    <i class=\"fab fa-discord\" style=\"color: white; font-size: 34px; margin-right: 10px;\"></i>\r\n                </a>\r\n                <a href=\"https://twitter.com/nekoyorisou\" target=\"_blank\" class=\"socialButtons\">\r\n                    <i class=\"fab fa-twitter-square\" style=\"color: white; font-size: 34px; margin-right: 10px;\"></i>\r\n                </a>\r\n                <a href=\"https://www.instagram.com/nekoyorisou\" target=\"_blank\" class=\"socialButtons\">\r\n                    <i class=\"fab fa-instagram\" style=\"color: white; font-size: 34px; margin-right: 10px;\"></i>\r\n                </a>\r\n            </span>\r\n        </span>\r\n    </div>\r\n</footer>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GuildService {\r\n  endpoint = environment.endpoint + '/guilds';\r\n  \r\n  singleton = null;\r\n\r\n  private _guilds = [];\r\n  get guilds() { return this._guilds; }\r\n\r\n  private get key() {\r\n    return localStorage.getItem('key');\r\n  }\r\n  \r\n  constructor(private http: HttpClient) {} \r\n  \r\n  async init() {\r\n    if (this.guilds.length <= 0)\r\n      await this.updateGuilds();\r\n  }\r\n\r\n  async updateGuilds() {\r\n    this._guilds = (this.key) ? \r\n      await this.http.get(`${this.endpoint}?key=${this.key}`).toPromise() as any : [];\r\n  }\r\n\r\n  getGuild(id: string) {\r\n    return this.guilds?.find(g => g.id === id);\r\n  }\r\n\r\n  getPublicGuild(id: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${id}/public`).toPromise();\r\n  }\r\n\r\n  getMembers(id: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${id}/members`).toPromise();\r\n  }\r\n\r\n  getSavedMember(guildId: string, userId: string ): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${guildId}/members/${userId}/saved`).toPromise();\r\n  }\r\n\r\n  getBalance(guildId: string, userId: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${guildId}/members/${userId}/balance`).toPromise();\r\n  }\r\n\r\n  getWarnings(id: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${id}/warnings`).toPromise();\r\n  }\r\n\r\n  getSavedGuild(id: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${id}/config?key=${this.key}`).toPromise();\r\n  }\r\n\r\n  getCommands(id: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${id}/commands`).toPromise();\r\n  }\r\n\r\n  getSavedLog(id: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${id}/log?key=${this.key}`).toPromise();\r\n  }\r\n\r\n  async sendEmbed(id: string, channelId: string ,embedData: {}): Promise<any> {\r\n    return this.http.post(`${this.endpoint}/${id}/channels/${channelId}/embed`, { embedData }).toPromise();\r\n  }\r\n\r\n  saveGuild(id: string, module: string, value: any): Promise<any> {    \r\n    return this.http.put(`${this.endpoint}/${id}/${module}?key=${this.key}`, value).toPromise();\r\n  }\r\n\r\n  getChannels(id: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${id}/channels`).toPromise();\r\n  }\r\n\r\n  getRoles(id: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${id}/roles`).toPromise();\r\n  }\r\n\r\n  getBotStatus(id: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${id}/bot-status`).toPromise();\r\n  }\r\n\r\n  getMemberStatus(id: string, userId: string): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/${id}/members/${userId}/member-status`).toPromise();\r\n  }\r\n\r\n  getMessage(id: string, channelId: string, messageId: string): Promise<any> {    \r\n    return this.http.get(`${this.endpoint}/${id}/channels/${channelId}/messages/${messageId}`).toPromise();\r\n  }\r\n}\r\n","  import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PayService } from 'src/app/services/pay.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserService } from '../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-plus',\r\n  templateUrl: './plus.component.html',\r\n  styleUrls: ['./plus.component.css']\r\n})\r\nexport class PlusComponent {\r\n  checkoutEndpoint = `${environment.endpoint}/pay`;\r\n\r\n  get plusDaysLeft() {\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const firstDate = new Date().getTime();\r\n    const secondDate = new Date(this.userService.savedUser.premiumExpiration).getTime();\r\n\r\n    return Math.round(Math.abs((firstDate - secondDate) / oneDay));\r\n  }\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private pay: PayService,\r\n    public userService: UserService\r\n  ) {}\r\n  \r\n  async ngOnInit() {\r\n    await this.userService.init();\r\n\r\n    const status = this.route.snapshot.queryParamMap.get('payment_status');\r\n    if (status === 'failed')\r\n      alert('Payment Failed');\r\n  }\r\n\r\n  async checkout(plan: number) {\r\n    window.location.href = this.pay.payURL(plan);\r\n  }\r\n}\r\n","<navbar></navbar>\r\n<div class=\"container\" style=\"position: relative; margin-top: 15px;\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-6\">\r\n      <h1 class=\"display-3\">Donate</h1>\r\n      <p class=\"lead\">Support Neko and support development of Neko's Assistant!</p>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n      <img class=\"float float-right plus\" src=\"assets/img/bot-profile.jpg\" alt=\"Neko Plus Transparent Avatar\" style=\"border-radius: 420px;\">\r\n    </div>\r\n  </div>\r\n  <section\r\n    id=\"benefits\"\r\n    class=\"row py-5\">\r\n    <app-plus-card\r\n      duration=\"1 Month\"\r\n      price=\"2.99\"\r\n      (checkout)=\"checkout(0)\"\r\n      class=\"col-sm-4\"></app-plus-card>\r\n    <app-plus-card style=\"transform: scale(1.045)\"\r\n      duration=\"3 Months\"\r\n      price=\"4.99\"\r\n      (checkout)=\"checkout(1)\"\r\n      class=\"col-sm-4\"></app-plus-card>\r\n      <app-plus-card\r\n      duration=\"1 Year\"\r\n      price=\"14.99\"\r\n      (checkout)=\"checkout(2)\"\r\n      class=\"col-sm-4\"></app-plus-card>\r\n  </section>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'plus-paywall',\r\n  templateUrl: './plus-paywall.component.html',\r\n  styleUrls: ['./plus-paywall.component.css']\r\n})\r\nexport class PlusPaywallComponent {\r\n  constructor(public userService: UserService) {}\r\n}\r\n","<div [ngClass]=\"{\r\n    'paywall': !userService.savedUser.premium,\r\n    'cursor-pointer': !userService.savedUser.premium\r\n  }\" [routerLink]=\"!userService.savedUser.premium ? '/plus' : null\">\r\n  <ng-content></ng-content>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport Fuse from 'fuse.js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommandsService {\r\n  private _commands = [];\r\n  get commands() { return this._commands ?? []; }\r\n\r\n  private endpoint = environment.endpoint + '/commands';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async init() {\r\n    if (this.commands.length <= 0)\r\n      await this.updateCommands();\r\n  }\r\n\r\n  async updateCommands() {\r\n    this._commands = await this.http.get(this.endpoint).toPromise() as any;\r\n  }\r\n\r\n  search(query: string) {\r\n    const fuse = new Fuse(this.commands, {\r\n      includeScore: true,\r\n      keys: [\r\n        { name: 'name', weight: 1 },\r\n        { name: 'description', weight: 0.5 },\r\n        { name: 'usage', weight: 0.3 }\r\n      ]\r\n    }); \r\n    \r\n    return fuse\r\n      .search(query)\r\n      .map(r => r.item); \r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { expandCollapse } from './zippy.component.animations';\r\n\r\n@Component({\r\n  selector: 'zippy',\r\n  templateUrl: './zippy.component.html',\r\n  styleUrls: ['./zippy.component.css'],\r\n  animations: [ expandCollapse ]\r\n})\r\nexport class ZippyComponent {\r\n    expanded = false;\r\n    @Input('title') title = 'Title';\r\n\r\n    toggle = () => this.expanded = !this.expanded;\r\n}\r\n","<ng-container>\r\n    <div class=\"zippy\">\r\n        <div class=\"zippy-heading\"\r\n            [class.expanded]=\"expanded\" \r\n            (click)=\"toggle()\">\r\n            {{ title }}\r\n            <span>\r\n                <i class=\"float-right fa fa-chevron-down\"></i>\r\n            </span>\r\n        </div>\r\n        <div class=\"zippy-body\"\r\n            [@expandCollapse]=\"(expanded) ? 'expanded' : 'collapsed'\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    </div>\r\n</ng-container>","<guild-sidebar [waitFor]=\"savedGuild && form\">\r\n  <div *ngIf=\"form\" class=\"container\">\r\n    <form #f=\"ngForm\" [formGroup]=\"form\">\r\n      <div>\r\n        <div class=\"d-flex justify-content-between\">\r\n          <h1 routerLink=\"/docs/announce\"\r\n            class=\"display-3\">Logs</h1>\r\n          <mat-slide-toggle formControlName=\"enabled\"\r\n            class=\"float-right mt-5\"></mat-slide-toggle>\r\n        </div>\r\n        <hr>\r\n      </div>\r\n      <h3>Events</h3>\r\n      <p class=\"desc\">Send messages to a channel when an event is triggered</p>\r\n      <div formArrayName=\"events\" class=\"row d-flex justify-content-center\">\r\n        <div *ngFor=\"let event of events; index as i\" class=\"col-lg-6 col-sm-12\">\r\n          <div [formGroupName]=\"i\" class=\"rounded event large shadow\">\r\n            <input type=\"hidden\" formControlName=\"event\">\r\n            <span class=\"d-flex justify-content-between\">\r\n              <strong class=\"color-heading\">{{ events[i] | snakeToSentenceCase }}</strong>\r\n              <mat-slide-toggle formControlName=\"enabled\"></mat-slide-toggle>\r\n            </span>\r\n            <hr>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Message</mat-label>\r\n              <textarea formControlName=\"message\" matInput #message>{{ getEvent(events[i])?.message }}</textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Channel</mat-label>\r\n              <mat-select formControlName=\"channel\">\r\n                <mat-option *ngFor=\"let channel of textChannels\" \r\n                  [value]=\"channel.id\">#{{ channel.name }}\r\n                  <span class=\"float-right text-muted\">[{{ getChannel(channel.parentId)?.name || 'N/A' }}]</span>\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <message-preview [content]=\"message.value\" [guild]=\"guild\"></message-preview>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</guild-sidebar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModuleConfig } from '../../../module-config';\r\nimport { FormControl, FormGroup, FormArray, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { GuildService } from '../../../services/guild.service';\r\n\r\n@Component({\r\n  selector: 'app-announce-module',\r\n  templateUrl: './logs-module.component.html',\r\n  styleUrls: ['./logs-module.component.css']\r\n})\r\nexport class LogsModuleComponent extends ModuleConfig implements OnInit {\r\n  EventType = EventType;\r\n\r\n  moduleName = 'logs';\r\n\r\n  events = [\r\n    EventType.Ban,\r\n    EventType.LevelUp,\r\n    EventType.MemberJoin,\r\n    EventType.MemberLeave,\r\n    EventType.MessageDeleted,\r\n    EventType.Unban,\r\n    EventType.Warn\r\n  ];\r\n\r\n  eventConfigs: AnnounceEvent[] = [];\r\n\r\n  constructor(\r\n    guildService: GuildService,\r\n    route: ActivatedRoute,\r\n    saveChanges: MatSnackBar) {\r\n    super(guildService, route, saveChanges);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await super.init();\r\n\r\n    this.eventConfigs = this.savedGuild.logs.events;\r\n  }\r\n\r\n  buildForm({ logs }: any) {\r\n    const formGroup = new FormGroup({\r\n      events: new FormArray([])\r\n    });\r\n    for (let i = 0; i < this.events.length; i++) {\r\n      const event = this.events[i];\r\n      const config = logs.events.find(e => e.event === event); \r\n\r\n      (formGroup.get('events') as FormArray).push(new FormGroup({\r\n        event: new FormControl(event),\r\n        enabled: new FormControl(config?.enabled ?? false),\r\n        channel: new FormControl(config?.channel ?? ''),\r\n        message: new FormControl(config?.message ?? this.LogsMessage(event), Validators.maxLength(512)),\r\n        embed: new FormGroup({\r\n          title: new FormControl(config?.embed?.title ?? ''),\r\n          description: new FormControl(config?.embed?.description ?? ''),\r\n          image: new FormControl(config?.embed?.image ?? ''),\r\n          color: new FormControl(config?.embed?.color ?? ''),\r\n          thumbnail: new FormControl(config?.embed?.thumbnail ?? ''),\r\n          author: new FormGroup({\r\n            text: new FormControl(config?.embed?.author?.text ?? ''),\r\n            image: new FormControl(config?.embed?.author?.image ?? '')\r\n          }),\r\n          footer: new FormGroup({\r\n            text: new FormControl(config?.embed?.footer?.text ?? ''),\r\n            image: new FormControl(config?.embed?.footer?.image ?? ''),\r\n            timestamp: new FormControl(config?.embed?.footer?.timestamp ?? true)\r\n          })\r\n        })\r\n      }));     \r\n    }\r\n    return formGroup;\r\n  }\r\n\r\n\r\n  LogsMessage(event: EventType) {\r\n\r\n    if(event == EventType.MemberJoin) return `[USER] has joined!`;\r\n    if(event == EventType.MemberLeave) return `[USER] has left!`;\r\n\r\n    if(event == EventType.MessageDeleted) return `[USER] deleted a message in \\`[CHANNEL]\\` with content: \\`[MESSAGE]\\``;\r\n\r\n    if(event == EventType.Ban) return '[STAFF] `BANNED` [USER] for [REASON]'\r\n    if(event == EventType.Unban) return '[STAFF] `UNBANNED` [USER] for [REASON]'\r\n\r\n    if(event == EventType.LevelUp) return '[USER] has leveled up to level [NEW_LEVEL]!'\r\n    if(event == EventType.Warn) return '[STAFF] `WARNED` [USER] for [REASON]'\r\n    \r\n    \r\n    else return `\\`${event}\\` was triggered in **[GUILD]**!`;\r\n  }\r\n\r\n  filterFormEvents(value: any) {\r\n    value.events = value.events.filter(e => e?.enabled);\r\n  }\r\n\r\n  getEvent(eventType: EventType) {\r\n    return this.eventConfigs.find(e => e.event === eventType);\r\n  }\r\n\r\n  async submit() {\r\n    this.filterFormEvents(this.form.value);  \r\n    await super.submit();\r\n  }\r\n}\r\n\r\nexport enum EventType {\r\n  Ban = 'BAN', \r\n  LevelUp = 'LEVEL_UP',\r\n  MessageDeleted = 'MESSAGE_DELETED',\r\n  MemberJoin = 'MEMBER_JOIN',\r\n  MemberLeave = 'MEMBER_LEAVE',\r\n  Unban = 'UNBAN', \r\n  Warn ='WARN'\r\n}\r\n\r\nexport interface AnnounceEvent {\r\n  event: EventType;\r\n  channel: string;\r\n  message: string;\r\n  embed: Embed;\r\n}\r\n\r\nexport interface Embed {\r\n  messageContent: string;\r\n  title: string;\r\n  image: string;\r\n  description: string;\r\n  /* url: string; Not needed as of right now */\r\n  color: string;\r\n  thumbnail: string;\r\n  author: {\r\n    image: string;\r\n    text: string;\r\n  }\r\n  footer: {\r\n    text: string;\r\n    image: string;\r\n    timestamp: boolean;\r\n  }\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n        <h5>Recent Warnings</h5>\r\n    </div>\r\n    <div class=\"col-md-9\">\r\n        <canvas *ngIf=\"chartReady\" baseChart\r\n            [datasets]=\"barChartData\"\r\n            [labels]=\"barChartLabels\"\r\n            [options]=\"barChartOptions\"\r\n            [plugins]=\"barChartPlugins\"\r\n            [legend]=\"barChartLegend\"\r\n            [chartType]=\"barChartType\">\r\n        </canvas>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { GuildService } from 'src/app/services/guild.service';\r\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\r\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'warnings-widget',\r\n  templateUrl: './warnings-widget.component.html',\r\n  styleUrls: ['./warnings-widget.component.css']\r\n})\r\nexport class WarningsWidgetComponent implements OnInit {\r\n  warnings: any;\r\n\r\n  chartReady = false;\r\n  \r\n  barChartOptions: ChartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [{ display: false }],\r\n      xAxes: [{ display: false }]\r\n    },\r\n    plugins: {\r\n      datalabels: { anchor: 'end', align: 'end' }\r\n    }\r\n  };\r\n  barChartLabels = [];\r\n  barChartType: ChartType = 'bar';\r\n  barChartLegend = true;\r\n  barChartPlugins = [pluginDataLabels];\r\n\r\n  barChartData: ChartDataSets[] = [];\r\n\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private route: ActivatedRoute) {}\r\n\r\n  async ngOnInit() {\r\n    this.route.paramMap.subscribe(async(val) => {\r\n      const id = val.get('id');\r\n\r\n      this.warnings = await this.guildService.getWarnings(id);\r\n  \r\n      this.barChartLabels = this.buildLabels();\r\n      this.barChartData = this.buildDataSets();\r\n      \r\n      this.chartReady = true;\r\n    });\r\n  }\r\n\r\n  buildLabels() {\r\n    const labels: string[] = [];\r\n    for (let i = 6; i >= 0; i--) {\t\t\r\n      const date = new Date();\r\n      date.setDate(date.getDate() - i);\r\n\r\n      labels.push(this.ddMM(date));\r\n    }    \r\n    return labels;\r\n  }\r\n\r\n  buildDataSets() {\r\n    const sets = [\r\n      { data: [0,0,0,0,0,0,0], label: 'All' },];\r\n      \r\n    for (const warning of this.warnings) {\r\n      const ddMM = this.ddMM(new Date(warning.at));      \r\n      const dayIndex = this.barChartLabels.indexOf(ddMM);\r\n\r\n      sets[0].data[dayIndex]++;\r\n    }\r\n    return sets;\r\n  }\r\n\r\n  private ddMM(date: Date) {\r\n    return `${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}`;   \r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'miniDate'\r\n})\r\nexport class MiniDatePipe implements PipeTransform {\r\n  transform(dateString: string, ...args: unknown[]): unknown {\r\n    const date = new Date(dateString);\r\n    return `${date.getDate()}/${(date.getMonth() + 1)}`;    \r\n  }\r\n}\r\n","<guild-sidebar [waitFor]=\"savedGuild && reactionRoles && reactionRoleMessages\">\r\n    <div *ngIf=\"form\" class=\"container\">\r\n        <form #f=\"ngForm\" [formGroup]=\"form\">\r\n            <div>\r\n                <div class=\"d-flex justify-content-between\">\r\n                    <h1 class=\"display-3\">Reaction Roles</h1>\r\n                    <mat-slide-toggle formControlName=\"enabled\"\r\n                        class=\"float-right mt-5\"></mat-slide-toggle>\r\n                </div>\r\n                <hr>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div formArrayName=\"configs\" class=\"row\">\r\n                    <div *ngFor=\"let i of reactionRolesIndices\"\r\n                      class=\"col-lg-6 col-md-12 my-3\">\r\n                      <div [formGroupName]=\"i\"\r\n                          class=\"rounded reaction-role\">\r\n                          <mat-form-field appearance=\"outline\" class=\"p-2\">\r\n                              <mat-label>Channel</mat-label>\r\n                              <mat-select formControlName=\"channel\">\r\n                                  <mat-option *ngFor=\"let channel of textChannels\" \r\n                                      [value]=\"channel.id\">#{{ channel.name }}\r\n                                      <span class=\"float-right text-muted\">[{{ getChannel(channel.parentId)?.name || 'N/A' }}]</span>\r\n                                  </mat-option>\r\n                              </mat-select>\r\n                          </mat-form-field>\r\n                          <!-- message -->\r\n                          <mat-form-field appearance=\"outline\" class=\"p-2\">                                \r\n                              <mat-label>Message ID</mat-label>\r\n                              <input matInput formControlName=\"messageId\" type=\"text\">\r\n                          </mat-form-field>\r\n                          <!-- emote -->\r\n                          <mat-form-field appearance=\"outline\" class=\"p-2\">\r\n                              <mat-label>Emote</mat-label>\r\n                              <input matInput #emote\r\n                                  formControlName=\"emote\" type=\"text\">\r\n                          </mat-form-field>\r\n                          <!-- role -->\r\n                          <mat-form-field appearance=\"outline\" class=\"p-2\">\r\n                              <mat-label>Role</mat-label>\r\n                              <mat-select\r\n                                  formControlName=\"role\">\r\n                                  <mat-option *ngFor=\"let role of roles\" \r\n                                      [value]=\"role.id\"\r\n                                      [style.color]=\"'#' + role.color?.toString(16)\">@{{ role.name }}</mat-option>\r\n                              </mat-select>\r\n                          </mat-form-field>\r\n                          <div class=\"px-4\">\r\n                            <div *ngIf=\"reactionRoleMessages[i]\">\r\n                                <message-preview\r\n                                    [author]=\"reactionRoleMessages[i].author\"\r\n                                    [createdAt]=\"toDate(reactionRoleMessages[i].createdTimestamp)\"\r\n                                    [content]=\"reactionRoleMessages[i].reactions.message.cleanContent\"\r\n                                    [member]=\"reactionRoleMessages[i].member\"></message-preview>\r\n                            </div>\r\n                            <div *ngIf=\"!reactionRoleMessages[i]\">\r\n                                <message-preview content=\"Message not found.\"></message-preview>\r\n                            </div>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  </guild-sidebar>","import { Component, OnInit } from '@angular/core';\r\nimport { ModuleConfig } from 'src/app/module-config';\r\nimport { toIterable } from 'src/app/utils';\r\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { GuildService } from 'src/app/services/guild.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-reaction-roles-module',\r\n  templateUrl: './reaction-roles-module.component.html',\r\n  styleUrls: ['./reaction-roles-module.component.css']\r\n})\r\nexport class ReactionRolesModuleComponent extends ModuleConfig implements OnInit {\r\n  moduleName = 'reactionRoles';\r\n\r\n  reactionRoleMessages = [];\r\n  reactionRolesIndices = toIterable(80);\r\n\r\n  get reactionRoles() { return this.savedGuild.reactionRoles; }\r\n\r\n  constructor(\r\n    public guildService: GuildService,\r\n    route: ActivatedRoute,\r\n    public userService: UserService,\r\n    saveChanges: MatSnackBar) {\r\n    super(guildService, route, saveChanges);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await super.init();\r\n\r\n    console.log(this.reactionRoles.reactionRolesLength)\r\n\r\n    if(this.reactionRoles.reactionRolesLength <= this.reactionRolesIndices) {\r\n      this.reactionRolesIndices = toIterable(this.reactionRoles.reactionRolesLength);\r\n    }\r\n\r\n    await this.updateReactionRolePreviews();\r\n  }\r\n\r\n  buildForm({ reactionRoles }: any) {\r\n    const formGroup = new FormGroup({\r\n      configs: new FormArray([])\r\n    });\r\n\r\n    for (const i of this.reactionRolesIndices) {\r\n      const config = reactionRoles.configs[i];\r\n      \r\n      const emojiPattern = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff]){1}/gm;\r\n\r\n      (formGroup.get('configs') as FormArray).setControl(i,\r\n        new FormGroup({\r\n          channel: new FormControl(config?.channel ?? ''),\r\n          role: new FormControl(config?.role ?? ''),\r\n          emote: new FormControl(config?.emote ?? '', ), //Validators.pattern(emojiPattern)\r\n          messageId: new FormControl(config?.messageId ?? '', Validators.pattern(/[0-9]{18}/g))\r\n        }));    \r\n    }\r\n    return formGroup;\r\n  }\r\n\r\n  async submit() {\r\n    await super.submit();\r\n\r\n    await this.updateReactionRolePreviews();\r\n  }\r\n\r\n  async updateReactionRolePreviews() {\r\n    this.reactionRoleMessages = [];\r\n    for (const i of this.reactionRolesIndices) {\r\n      const config = (this.form.controls.configs as FormArray)\r\n        .get(i.toString())?.value;\r\n      if (!(config.channel && config.messageId))\r\n        return this.reactionRoleMessages.push(null);      \r\n\r\n      try {\r\n        const msg = await this.getMessage(config.channel, config.messageId);\r\n        this.reactionRoleMessages.push(msg);        \r\n      } catch { this.reactionRoleMessages.push(null); }\r\n    }\r\n  }\r\n\r\n  filterFormValue() {\r\n    this.form.value.configs = this.form.value.configs\r\n      .filter(value => Object.keys(value).some(key => value[key]));\r\n  }\r\n\r\n  getMessage(channelId: string, messageId: string) {\r\n    return this.guildService.getMessage(this.guildId, channelId, messageId);\r\n  }\r\n\r\n  toDate(dateString: string) { return new Date(dateString); }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GuildService } from '../../../services/guild.service';\r\nimport { UserService } from '../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private router: Router,\r\n    private userService: UserService) {}\r\n\r\n  async ngOnInit() {\r\n    localStorage.removeItem('key');\r\n    \r\n    await this.userService.updateUser();\r\n    await this.guildService.updateGuilds();\r\n\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","<spinner></spinner>","import { Component, Input } from '@angular/core';\r\nimport { toHTML } from 'discord-markdown';\r\nimport { textEmoji } from 'markdown-to-text-emoji';\r\nimport { UserService } from '../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'message-embed-preview',\r\n  templateUrl: './message-embed-preview.component.html',\r\n  styleUrls: ['./message-embed-preview.component.css']\r\n})\r\nexport class MessageEmbedPreviewComponent {\r\n  @Input() guild = { name: 'Testing123', memberCount: 420 };\r\n  @Input() eventVariables = true;\r\n\r\n  @Input() content = 'Hello World';\r\n  @Input() title = 'Embed Preview';\r\n  @Input() description = 'This is a description';\r\n  @Input() message = 'Embed Message';\r\n  @Input() color = '#4f545c';\r\n  @Input() footerText = 'Footer Text';\r\n  @Input() footerImage = 'https://probot.media/PG1jbcfVKQ.png'\r\n  @Input() hidden = true;\r\n\r\n  @Input() embedAuthor = {\r\n    name: 'Hello World',\r\n    icon: 'https://probot.media/PG1jbcfVKQ.png',\r\n    url: 'https://probot.media/PG1jbcfVKQ.png'\r\n  }\r\n\r\n  @Input() embedImage = 'https://probot.media/PG1jbcfVKQ.png'\r\n\r\n  @Input() author = {\r\n    username: 'Neko\\'s Assistant',\r\n    avatarURL: 'https://i.imgur.com/4fwl9A5.png'\r\n  }\r\n  \r\n  @Input() member = {\r\n    displayName: 'Neko\\'s Assistant'\r\n  }\r\n  @Input() createdAt = new Date();\r\n\r\n  constructor(private userService: UserService) {}\r\n\r\n  get timestamp() {\r\n    const createdAt = new Date(this.createdAt ?? new Date());\r\n    const timestamp = createdAt\r\n      .toTimeString()\r\n      .slice(0, 5);\r\n\r\n    const wasToday = new Date().getDay() / createdAt.getDay() === 1;\r\n    const wasYesterday = new Date().getDate() % createdAt.getDate() === 1;\r\n    const isTommorow = createdAt.getTime() % new Date().getDate() === 1;\r\n    \r\n    if (wasToday)\r\n      return `Today at ${timestamp}`;\r\n    if (wasYesterday)\r\n      return `Yesterday at ${timestamp}`;\r\n    else if (isTommorow)\r\n      return `Tommorow at ${timestamp}`;\r\n\r\n    return createdAt\r\n      .toJSON()\r\n      .slice(0,10)\r\n      .split('-')\r\n      .reverse()\r\n      .join('/');\r\n  }\r\n\r\n  openLink(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  get processed() {\r\n    const user = this.userService.user;\r\n\r\n    return (this.eventVariables) ? toHTML(textEmoji(this.content\r\n      .replace(/\\[GUILD\\]/, this.guild?.name)\r\n      .replace(/\\[INSTIGATOR\\]/, '@Neko#6834')\r\n      .replace(/\\[MEMBER_COUNT\\]/g, this.guild?.memberCount.toString())\r\n      .replace(/\\[MESSAGE\\]/g, 'Bad Message')\r\n      .replace(/\\[CHANNEL\\]/g, 'General')\r\n      .replace(/\\[MODULE\\]/g, 'General')\r\n      .replace(/\\[STAFF\\]/g, '@Hamburbur#3134')\r\n      .replace(/\\[NEW_LEVEL\\]/g, '2')\r\n      .replace(/\\[NEW_VALUE\\]/g, JSON.stringify({ prefix: '.' }, null, 2))\r\n      .replace(/\\[OLD_LEVEL\\]/g, '1')\r\n      .replace(/\\[OLD_VALUE\\]/g, JSON.stringify({ prefix: '/' }, null, 2))\r\n      .replace(/\\[REASON\\]/g, 'not having Neko Plus')\r\n      .replace(/\\[USER\\]/g, `@BadUser#6969`)))\r\n      .replace(/\\[XP\\]/g, '300') : toHTML(textEmoji(this.content));\r\n  }\r\n\r\n  //get url from description\r\n  getUrlFromDescription() {\r\n    let description = this.description;\r\n    let url = description.match(/\\((.*?)\\)/);\r\n\r\n    if(url) \r\n      return url[1]\r\n  }\r\n\r\n  getTextBeforeUrl() {\r\n    let description = this.description;\r\n    let url = description.match(/\\((.*?)\\)/);\r\n    let textBeforeUrl = description.match(/\\[.*?\\]/);\r\n\r\n    if(url) {\r\n      let urlIndex = description.indexOf(url[0]);\r\n      let textBeforeUrlIndex = description.indexOf(textBeforeUrl[0]);\r\n\r\n      return description.substring(textBeforeUrlIndex, urlIndex)\r\n    }\r\n  }\r\n\r\n  //get title\r\n  get processedTitle() {\r\n    return toHTML(textEmoji(this.title));\r\n  }\r\n\r\n\r\n  get processedDescription() {\r\n    this.getTextBeforeUrl();\r\n    this.getUrlFromDescription();\r\n    // [textbeforeurl](url)\r\n\r\n    let replaceText = `${this.getTextBeforeUrl()}(${this.getUrlFromDescription()})`\r\n\r\n    //`<a href=\"${this.getUrlFromDescription()}\" target=\"_blank\">${this.getTextBeforeUrl()}</a>`\r\n    //.replace(/\\[(.*?)\\]/g, '$1')\r\n\r\n    if(this.description.includes(replaceText)) {\r\n      return this.description\r\n      .replace(replaceText, `<a href=\"${this.getUrlFromDescription()}\" target=\"_blank\">${this.getTextBeforeUrl().replace(/\\[(.*?)\\]/g, '$1')}</a>`)\r\n      .replace(/\\n/g, \"<br />\");\r\n    } else return this.description.replace(/\\n/g, \"<br />\");\r\n  }\r\n\r\n  get processedFooter() {\r\n    return toHTML(textEmoji(this.footerText));\r\n  }\r\n}\r\n","<div class=\"rounded flex-vertical whitney theme-dark\">\r\n    <div class=\"rounded chat flex-vertical flex-spacer\">\r\n        <div class=\"rounded content flex-spacer flex-horizontal\">\r\n            <div class=\"rounded flex-spacer flex-vertical messages-wrapper\">\r\n                <div class=\"scroller-wrap\">\r\n                    <div class=\"scroller messages\">\r\n                        <div class=\"message-group hide-overflow\">\r\n                            <div class=\"avatar-large animate\" [style.backgroundImage]=\"'url(' + author.avatarURL + ')'\"></div>\r\n                            <div class=\"comment\">\r\n                                <div class=\"message first\">\r\n                                    <h2 style=\"line-height: 16px;\">\r\n                                        <span class=\"username-wrapper v-btm\">\r\n                                            <strong class=\"user-name\">{{ member.displayName }}</strong>\r\n                                            <span class=\"bot-tag\">BOT</span>\r\n                                        </span>\r\n                                        <span class=\"highlight-separator\"> - </span>\r\n                                        <span class=\"timestamp\">{{ timestamp }}</span>\r\n                                    </h2>\r\n                                    <div [innerHtml]=\"processed\" class=\"message-text\"></div>\r\n                                    <div class=\"embedContent\" [hidden]=\"hidden\">\r\n                                        <div class=\"embed-color-pill\" [style.background-color]=\"color\"></div>\r\n                                        <div class=\"embed-author\">\r\n                                            <img [src]=\"embedAuthor.icon\" [hidden]=\"!embedAuthor.icon\" class=\"embed-footer-image\" style=\"border-radius: 69px; width: 20px; height: 20px;\">\r\n                                            <div [innerHtml]=\"embedAuthor.name\" (click)=\"openLink(embedAuthor.url)\" class=\"message-text embed-footer-text\" style=\"align-self: baseline;\" ></div>\r\n                                        </div>\r\n                                        <div [innerHtml]=\"processedTitle\" class=\"message-text embed-title\"></div>\r\n                                        <div [innerHTML]=\"processedDescription\" class=\"message-text embed-description\"></div>\r\n                                        <img class=\"embedImg\" [src]=\"embedImage\">\r\n                                        <div class=\"embed-footer\">\r\n                                            <img [src]=\"footerImage\" class=\"embed-footer-image\">\r\n                                            <div [innerHtml]=\"processedFooter\" class=\"message-text embed-footer-text\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<guild-sidebar>\r\n    <div class=\"container\">\r\n        <header>\r\n            <div>\r\n                <h1 class=\"display-3\">Warnings</h1>\r\n                <hr class=\"my-2\">\r\n            </div>\r\n        </header>\r\n        <mat-form-field\r\n            class=\"d-flex justify-content-center\" appearance=\"outline\">\r\n            <mat-label>Filter</mat-label>\r\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Neko\">\r\n        </mat-form-field>\r\n        \r\n        <div *ngIf=\"dataSource\" class=\"mat-elevation-z8\">\r\n            <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                <ng-container matColumnDef=\"number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> # </th>\r\n                    <td mat-cell *matCellDef=\"let row; index as i\">\r\n                        {{ row.number }}\r\n                    </td>\r\n                </ng-container>\r\n            \r\n                <ng-container matColumnDef=\"to\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> To </th>\r\n                    <td class=\"user\" mat-cell *matCellDef=\"let row\">\r\n                        <member-username [member]=\"getMember(row.userId)\"></member-username>\r\n                    </td>\r\n                </ng-container>\r\n            \r\n                <ng-container matColumnDef=\"by\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> By </th>\r\n                    <td class=\"user\" mat-cell *matCellDef=\"let row\">\r\n                        <member-username [member]=\"getMember(row.instigatorId)\"></member-username>\r\n                    </td>\r\n                </ng-container>\r\n            \r\n                <ng-container matColumnDef=\"reason\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Reason </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.reason }}\r\n                    </td>\r\n                </ng-container>\r\n                \r\n                <ng-container matColumnDef=\"at\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> At </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.at | cleanDateTime }} </td>\r\n                </ng-container>\r\n            \r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n            <mat-paginator appearance=\"outline\"\r\n                [pageSizeOptions]=\"[10, 25, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</guild-sidebar>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GuildService } from 'src/app/services/guild.service';\r\n\r\n@Component({\r\n  selector: 'app-warnings-module',\r\n  templateUrl: './warnings-module.component.html',\r\n  styleUrls: ['./warnings-module.component.css']\r\n})\r\nexport class WarningsModuleComponent implements OnInit {\r\n  members: any[];\r\n\r\n  displayedColumns: string[] = ['number', 'to', 'by', 'reason', 'at'];\r\n  dataSource = new MatTableDataSource();\r\n  warnings: any[] = [];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private guildService: GuildService,\r\n    private service: GuildService) {}\r\n\r\n  async ngOnInit() { \r\n    const id = this.route.snapshot.paramMap.get('id');\r\n\r\n    this.members = await this.guildService.getMembers(id);\r\n    \r\n    const warnings = await this.service.getWarnings(id);\r\n    warnings.reverse();\r\n\r\n    this.dataSource = new MatTableDataSource(warnings);\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator)\r\n      this.dataSource.paginator.firstPage();\r\n  }\r\n\r\n  getMember(id: string) {          \r\n    return this.members.find(m => m.id === id) || {};\r\n  }\r\n}","<guild-sidebar [waitFor]=\"savedGuild && general\">\r\n    <div *ngIf=\"form\" class=\"container\">\r\n        <form #f=\"ngForm\" [formGroup]=\"form\">\r\n            <div class=\"d-flex justify-content-between\">\r\n                <h1 class=\"display-3\">General</h1>\r\n                <mat-slide-toggle formControlName=\"enabled\"\r\n                    class=\"float-right mt-5\"></mat-slide-toggle>\r\n            </div>\r\n            <hr>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-4 col-sm-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Prefix</mat-label>\r\n                        <input matInput\r\n                            formControlName=\"prefix\" type=\"text\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-lg-4 col-sm-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Ignored Channels</mat-label>\r\n                        <mat-select multiple\r\n                            formControlName=\"ignoredChannels\">\r\n                            <mat-option *ngFor=\"let channel of textChannels\" \r\n                                [value]=\"channel.id\">#{{ channel.name }}\r\n                                <span class=\"float-right text-muted\">[{{ getChannel(channel.parentID)?.name || 'N/A' }}]</span>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-lg-4 col-sm-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Auto Roles</mat-label>\r\n                        <mat-select multiple\r\n                            formControlName=\"autoRoles\">\r\n                            <mat-option *ngFor=\"let role of roles\" \r\n                                [value]=\"role.id\"\r\n                                [style.color]=\"'#' + role.color?.toString(16)\">@{{ role.name }}</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</guild-sidebar>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ModuleConfig } from '../../../module-config';\r\nimport { GuildService } from '../../../services/guild.service';\r\n\r\n@Component({\r\n  selector: 'app-general-module',\r\n  templateUrl: './general-module.component.html',\r\n  styleUrls: ['./general-module.component.css']\r\n})\r\nexport class GeneralModuleComponent extends ModuleConfig implements OnInit {\r\n  moduleName = 'general';\r\n\r\n  get general() { return this.savedGuild.general; }\r\n\r\n  constructor(\r\n    guildService: GuildService,\r\n    route: ActivatedRoute,\r\n    saveChanges: MatSnackBar) {\r\n    super(guildService, route, saveChanges);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await super.init();\r\n  }\r\n\r\n  buildForm({ general }: any) {\r\n    const formGroup = new FormGroup({\r\n      prefix: new FormControl(general.prefix ?? '', [\r\n        Validators.required, \r\n        Validators.maxLength(5) \r\n      ]),\r\n      ignoredChannels: new FormControl(general.ignoredChannels ?? []),\r\n      autoRoles: new FormControl(general.autoRoles ?? [])\r\n    });\r\n    return formGroup;\r\n  }\r\n}\r\n","  \r\nimport { style, state, trigger, animate, transition } from '@angular/animations';\r\n\r\nexport const slideUpDown = trigger('expandCollapse', [\r\n    state('up', style({\r\n        height: 0,\r\n        color: 'transparent'\r\n    })),\r\n    state('down', style({ height: '*' })),\r\n    transition('up <=> down', [ animate('200ms ease') ])\r\n]);","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-payment-success',\r\n  templateUrl: './payment-success.component.html',\r\n  styleUrls: ['./payment-success.component.css']\r\n})\r\nexport class PaymentSuccessComponent implements OnInit {\r\n  secondsDelay = 5;\r\n  \r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.router.navigate(['/dashboard']);\r\n    }, 5 * 1000);\r\n  }\r\n}","<div class=\"center\">\r\n    <div class=\"checkmark\">\r\n        <svg class=\"star\" height=\"19\" viewBox=\"0 0 19 19\" width=\"19\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M8.296.747c.532-.972 1.393-.973 1.925 0l2.665 4.872 4.876 2.66c.974.532.975 1.393 0 1.926l-4.875 2.666-2.664 4.876c-.53.972-1.39.973-1.924 0l-2.664-4.876L.76 10.206c-.972-.532-.973-1.393 0-1.925l4.872-2.66L8.296.746z\" >\r\n            </path></svg>\r\n        <svg class=\"star\" height=\"19\" viewBox=\"0 0 19 19\" width=\"19\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M8.296.747c.532-.972 1.393-.973 1.925 0l2.665 4.872 4.876 2.66c.974.532.975 1.393 0 1.926l-4.875 2.666-2.664 4.876c-.53.972-1.39.973-1.924 0l-2.664-4.876L.76 10.206c-.972-.532-.973-1.393 0-1.925l4.872-2.66L8.296.746z\" >\r\n            </path></svg>\r\n        <svg class=\"star\" height=\"19\" viewBox=\"0 0 19 19\" width=\"19\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M8.296.747c.532-.972 1.393-.973 1.925 0l2.665 4.872 4.876 2.66c.974.532.975 1.393 0 1.926l-4.875 2.666-2.664 4.876c-.53.972-1.39.973-1.924 0l-2.664-4.876L.76 10.206c-.972-.532-.973-1.393 0-1.925l4.872-2.66L8.296.746z\" >\r\n            </path></svg>\r\n        <svg class=\"star\" height=\"19\" viewBox=\"0 0 19 19\" width=\"19\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M8.296.747c.532-.972 1.393-.973 1.925 0l2.665 4.872 4.876 2.66c.974.532.975 1.393 0 1.926l-4.875 2.666-2.664 4.876c-.53.972-1.39.973-1.924 0l-2.664-4.876L.76 10.206c-.972-.532-.973-1.393 0-1.925l4.872-2.66L8.296.746z\" >\r\n            </path></svg>\r\n        <svg class=\"star\" height=\"19\" viewBox=\"0 0 19 19\" width=\"19\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M8.296.747c.532-.972 1.393-.973 1.925 0l2.665 4.872 4.876 2.66c.974.532.975 1.393 0 1.926l-4.875 2.666-2.664 4.876c-.53.972-1.39.973-1.924 0l-2.664-4.876L.76 10.206c-.972-.532-.973-1.393 0-1.925l4.872-2.66L8.296.746z\" >\r\n            </path></svg>\r\n        <svg class=\"star\" height=\"19\" viewBox=\"0 0 19 19\" width=\"19\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M8.296.747c.532-.972 1.393-.973 1.925 0l2.665 4.872 4.876 2.66c.974.532.975 1.393 0 1.926l-4.875 2.666-2.664 4.876c-.53.972-1.39.973-1.924 0l-2.664-4.876L.76 10.206c-.972-.532-.973-1.393 0-1.925l4.872-2.66L8.296.746z\" >\r\n            </path></svg>\r\n        <svg class=\"checkmark__check\" height=\"36\" viewBox=\"0 0 48 36\" width=\"48\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M47.248 3.9L43.906.667a2.428 2.428 0 0 0-3.344 0l-23.63 23.09-9.554-9.338a2.432 2.432 0 0 0-3.345 0L.692 17.654a2.236 2.236 0 0 0 .002 3.233l14.567 14.175c.926.894 2.42.894 3.342.01L47.248 7.128c.922-.89.922-2.34 0-3.23\">\r\n            </path></svg>\r\n        <svg class=\"checkmark__background\" height=\"115\" viewBox=\"0 0 120 115\" width=\"120\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M107.332 72.938c-1.798 5.557 4.564 15.334 1.21 19.96-3.387 4.674-14.646 1.605-19.298 5.003-4.61 3.368-5.163 15.074-10.695 16.878-5.344 1.743-12.628-7.35-18.545-7.35-5.922 0-13.206 9.088-18.543 7.345-5.538-1.804-6.09-13.515-10.696-16.877-4.657-3.398-15.91-.334-19.297-5.002-3.356-4.627 3.006-14.404 1.208-19.962C10.93 67.576 0 63.442 0 57.5c0-5.943 10.93-10.076 12.668-15.438 1.798-5.557-4.564-15.334-1.21-19.96 3.387-4.674 14.646-1.605 19.298-5.003C35.366 13.73 35.92 2.025 41.45.22c5.344-1.743 12.628 7.35 18.545 7.35 5.922 0 13.206-9.088 18.543-7.345 5.538 1.804 6.09 13.515 10.696 16.877 4.657 3.398 15.91.334 19.297 5.002 3.356 4.627-3.006 14.404-1.208 19.962C109.07 47.424 120 51.562 120 57.5c0 5.943-10.93 10.076-12.668 15.438z\" >\r\n            </path></svg>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  endpoint: 'http://localhost/api',\r\n  discordInvite: 'https://discord.gg/NyxuUKVha7',\r\n  CLIENT_SECRET: 'fv6nqPabWe7EyxSFbFsnq3v6SPXe6Jy9',\r\n  version: 'v0.1.0b',\r\n  botOwnerId: '372099126583754753',\r\n  guildId: '1004444387490680923'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<guild-sidebar>\r\n    <div class=\"container\">\r\n        <header>\r\n            <h1 class=\"display-3\">Audit Log</h1>\r\n            <hr class=\"my-2\">\r\n        </header>\r\n        <mat-form-field\r\n            class=\"d-flex justify-content-center\" appearance=\"outline\">\r\n            <mat-label>Filter</mat-label>\r\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"prefix\">\r\n        </mat-form-field>\r\n          \r\n        <div *ngIf=\"dataSource\" class=\"mat-elevation-z8\">\r\n            <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                <ng-container matColumnDef=\"number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> # </th>\r\n                    <td mat-cell *matCellDef=\"let row; index as i\">{{ changes.length - i }}</td>\r\n                </ng-container>\r\n            \r\n                <ng-container matColumnDef=\"by\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> By </th>\r\n                    <td class=\"user\" mat-cell *matCellDef=\"let row\">\r\n                        <member-username [member]=\"getMember(row.by)\"></member-username>\r\n                    </td>\r\n                </ng-container>\r\n            \r\n                <ng-container matColumnDef=\"old\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Old </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <pre><code [highlight]=\"row.changes?.old | json\">{{row.changes?.old | json }}</code></pre>\r\n                    </td>\r\n                </ng-container>\r\n            \r\n                <ng-container matColumnDef=\"new\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> New </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <pre><code [highlight]=\"row.changes?.new | json\">{{row.changes?.new | json }}</code></pre>\r\n                    </td>\r\n                </ng-container>\r\n                \r\n                <ng-container matColumnDef=\"at\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> At </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.at | cleanDateTime }} </td>\r\n                </ng-container>\r\n            \r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n            <mat-paginator appearance=\"outline\"\r\n                [pageSizeOptions]=\"[10, 25, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</guild-sidebar>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { GuildService } from '../../../services/guild.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-log-module',\r\n  templateUrl: './log-module.component.html',\r\n  styleUrls: ['./log-module.component.css']\r\n})\r\nexport class LogModuleComponent implements OnInit {\r\n  members: any[];\r\n\r\n  displayedColumns: string[] = ['number', 'by', 'old', 'new', 'at'];\r\n  dataSource = new MatTableDataSource();\r\n  changes: any[] = [];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private guildService: GuildService) {}\r\n\r\n  async ngOnInit() { \r\n    const id = this.route.snapshot.paramMap.get('id');\r\n\r\n    const log = await this.guildService.getSavedLog(id);\r\n    this.changes = log.changes.reverse();\r\n\r\n    this.members = await this.guildService.getMembers(id);\r\n    \r\n    this.dataSource = new MatTableDataSource(this.changes);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator)\r\n      this.dataSource.paginator.firstPage();\r\n  }\r\n\r\n  getMember(id: string) {          \r\n    return this.members.find(m => m.id === id) || {};\r\n  }\r\n}","<guild-sidebar [waitFor]=\"savedGuild\">\r\n    <div *ngIf=\"form\" class=\"container\">\r\n      <form #f=\"ngForm\" [formGroup]=\"form\">\r\n        <div>\r\n          <div class=\"d-flex justify-content-between\">\r\n            <h1 routerLink=\"/docs/leveling\"\r\n              class=\"display-3\">Leveling</h1>\r\n            <mat-slide-toggle formControlName=\"enabled\"\r\n              class=\"float-right mt-5\"></mat-slide-toggle>\r\n          </div>\r\n          <hr>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-4 col-md-6\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Ignored Roles</mat-label>\r\n              <mat-select multiple\r\n                formControlName=\"ignoredRoles\">\r\n                <mat-option *ngFor=\"let role of roles\" \r\n                  [value]=\"role.id\"\r\n                  [style.color]=\"'#' + role.color?.toString(16)\">@{{ role.name }}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-6\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>XP Per Message</mat-label>\r\n              <input formControlName=\"xpPerMessage\"\r\n                type=\"number\" matInput>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-6\">\r\n            <div>\r\n              <label class=\"d-block\">Max Messages Per Minute</label>\r\n              <mat-slider formControlName=\"maxMessagesPerMinute\"\r\n                step=\"1\" tickInterval=\"1\" thumbLabel max=\"30\"></mat-slider>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr>\r\n        <h3>Level Roles</h3>\r\n        <p class=\"desc\">Reward users with roles when leveling up</p>\r\n        <div formArrayName=\"levelRoles\" class=\"row\">\r\n          <div *ngFor=\"let i of levelRoleIndices\"\r\n            class=\"col-lg-6 col-sm-12\">\r\n            <div [formGroupName]=\"i\" class=\"rounded role d-flex justify-content-around row\">\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field appearance=\"outline\">                \r\n                  <mat-label>Level</mat-label>              \r\n                  <input type=\"number\" formControlName=\"level\" matInput #level>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field appearance=\"outline\">                \r\n                  <mat-label>Role</mat-label>\r\n                  <mat-select\r\n                    formControlName=\"role\">\r\n                    <mat-option *ngFor=\"let role of roles\" \r\n                      [value]=\"role.id\"\r\n                      [style.color]=\"'#' + role.color?.toString(16)\">@{{ role.name }}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div [@expandCollapse]=\"(level.value > 0) ? 'down' : 'up'\"\r\n                class=\"px-4\" [class]=\"(level.value > 0) ? 'pb-3' : ''\">\r\n                A member would need a total of <strong>{{ getXPForLevel(level.value) | number }}XP</strong> to unlock this.\r\n                It would take them a minimum of <strong>{{ getHoursForLevel(level.value) | number }} hours</strong> if they didn't stop typing.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </guild-sidebar>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GuildService } from '../../../services/guild.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ModuleConfig } from '../../../module-config';\r\nimport { slideUpDown } from './leveling-module.animations';\r\n\r\n@Component({\r\n  selector: 'app-leveling-module',\r\n  templateUrl: './leveling-module.component.html',\r\n  styleUrls: ['./leveling-module.component.css'],\r\n  animations: [ slideUpDown ]\r\n})\r\nexport class LevelingModuleComponent extends ModuleConfig implements OnInit {\r\n  levelRoleIndices = [0,1,2,3,4,5,6,7];\r\n  moduleName = 'leveling';\r\n\r\n  get levelRolesFormArray() { return this.form.get('levelRoles') as FormArray; }\r\n\r\n  constructor(\r\n    guildService: GuildService,\r\n    route: ActivatedRoute,\r\n    saveChanges: MatSnackBar) {\r\n    super(guildService, route, saveChanges);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await super.init();    \r\n  }\r\n  \r\n  buildForm({ leveling }: any) {\r\n    const formGroup = new FormGroup({\r\n      ignoredRoles: new FormControl(leveling.ignoredRoles ?? []),\r\n      levelRoles: new FormArray([]),\r\n      maxMessagesPerMinute: new FormControl(leveling.maxMessagesPerMinute ?? 3,\r\n        [ Validators.min(1), Validators.max(30) ]),\r\n      xpPerMessage: new FormControl(leveling.xpPerMessage ?? 50,\r\n        [ Validators.min(0), Validators.max(10000) ])\r\n    });\r\n    this.buildLevelRolesFormArray(formGroup, leveling);\r\n    return formGroup;\r\n  }\r\n  private buildLevelRolesFormArray(formGroup: FormGroup, leveling: any) {\r\n    for (const i of this.levelRoleIndices)\r\n      (formGroup.get('levelRoles') as FormArray)\r\n        .setControl(i,\r\n          (new FormGroup({\r\n          level: new FormControl(leveling.levelRoles[i]?.level ?? 0, Validators.min(0)),\r\n          role: new FormControl(leveling.levelRoles[i]?.role ?? '')\r\n        })));\r\n  }\r\n\r\n  filterFormValue() {\r\n    this.form.value.levelRoles = this.form.value.levelRoles\r\n      .filter(c => c.level > 0);\r\n  }\r\n\r\n  getXPForLevel(level: any) {\r\n    level = Number(level);\r\n    return (75 * (level + 1)**2) + (75 * (level + 1)) - 150;\r\n  }\r\n\r\n  getHoursForLevel(level: number) {\r\n    const xpPerMinute = this.form.value.xpPerMessage * this.form.value.maxMessagesPerMinute;\r\n    const xpRequired = this.getXPForLevel(level);\r\n    return xpRequired / (xpPerMinute * 60);\r\n  }\r\n}\r\n\r\nexport interface LevelRole {\r\n  level: number;\r\n  role: string;\r\n}\r\n","<navbar></navbar>\r\n<div class=\"container\">\r\n    <div class=\"jumbotron\">\r\n        <img *ngIf=\"guild.iconURL\"\r\n            [src]=\"guild.iconURL\" alt=\"{{ guild.name }} Leaderboard\"\r\n            class=\"guild-icon\">\r\n        <h1 class=\"display-3\">{{ guild.name }}</h1>\r\n        <hr>\r\n    </div>\r\n    <div id=\"leaderboard\">\r\n        <div *ngFor=\"let member of members\"\r\n            class=\"member\">\r\n            <span [class]=\"'rank-' + (members.indexOf(member) + 1)\" \r\n                class=\"rank\">{{ members.indexOf(member) + 1 }}</span>\r\n            <member-username [member]=\"member\"></member-username>\r\n            <div class=\"float-right pt-2 d-md-block d-none\">\r\n                <span class=\"info\">\r\n                    <strong>{{ member.xp | number }}</strong>\r\n                    <span class=\"text-muted\">/{{ (member.xp + member.xpForNextLevel) | number }} </span>\r\n                    <span>XP</span>\r\n                </span>\r\n                <span class=\"divider\">|</span>\r\n                <span class=\"info\">\r\n                    <span>LVL</span>\r\n                    <strong> {{ member.level }}</strong>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GuildService } from '../../../services/guild.service';\r\n\r\n@Component({\r\n  selector: 'app-leaderboard-module',\r\n  templateUrl: './leaderboard-module.component.html',\r\n  styleUrls: ['./leaderboard-module.component.css']\r\n})\r\nexport class LeaderboardModuleComponent implements OnInit {\r\n  members: any;\r\n  guild: any = {};\r\n\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private route: ActivatedRoute) {}\r\n\r\n  async ngOnInit() {\r\n    const guildId = this.route.snapshot.paramMap.get('id');\r\n\r\n    this.members = await this.guildService.getMembers(guildId);\r\n    this.guild = await this.guildService.getPublicGuild(guildId);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'member-username',\r\n  templateUrl: './member-username.component.html',\r\n  styleUrls: ['./member-username.component.css']\r\n})\r\nexport class MemberUsernameComponent {\r\n  @Input() member;\r\n  @Input() withAvatar = true;\r\n}\r\n","<img *ngIf=\"withAvatar\" [src]=\"member.displayAvatarURL\" alt=\"\">\r\n<span class=\"username\">{{ member.username }}</span>\r\n<span class=\"tag\">{{ member.tag }}</span>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'save-changes',\r\n  templateUrl: './save-changes.component.html',\r\n  styleUrls: ['./save-changes.component.css']\r\n})\r\nexport class SaveChangesComponent implements OnInit {\r\n  @Output() onReset = new EventEmitter();\r\n  @Output() onSave = new EventEmitter();\r\n\r\n  constructor(private snackBar: MatSnackBar) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  reset() {\r\n    this.onReset.emit();\r\n    this.close();\r\n  }\r\n\r\n  save() {\r\n    this.onSave.emit();\r\n    this.close();\r\n  }\r\n\r\n  close() {\r\n    this.snackBar.dismiss();\r\n    \r\n    this.onReset.unsubscribe();\r\n    this.onSave.unsubscribe();\r\n  }\r\n}","  \r\n<div class=\"row\">\r\n    <div class=\"text col-lg-8 col-sm-12 p-lg-1\">\r\n        Careful - You have unsaved changes!\r\n    </div>\r\n    <div class=\"col-lg-4 col-sm-12 d-flex justify-content-center\">\r\n        <button id=\"reset\" type=\"submit\" \r\n            mat-button (click)=\"reset()\">Reset</button>\r\n        <button id=\"save\" type=\"submit\"\r\n            mat-button (click)=\"save()\">Save</button>\r\n    </div>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { camelToSentenceCase } from '../utils';\r\n\r\n@Pipe({ name: 'camelToSentenceCase' })\r\nexport class CamelToSentenceCasePipe implements PipeTransform {\r\n  transform(words: string) {\r\n    return camelToSentenceCase(words);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  endpoint = environment.endpoint;\r\n\r\n  get key() { return localStorage.getItem('key'); }\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getStats(): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/stats?key=${this.key}`).toPromise();\r\n  }\r\n\r\n  async sendFeedback(message: string) {\r\n    return this.http.post(`${this.endpoint}/feedback`, { message }).toPromise();\r\n  }\r\n\r\n  async getPing() {\r\n    return await this.http.get(`${this.endpoint}/ping`).toPromise();\r\n  }\r\n\r\n  async getRouletteGame() {\r\n    return await this.http.get(`${this.endpoint}/roulette`).toPromise();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { toHTML } from 'discord-markdown';\r\nimport { textEmoji } from 'markdown-to-text-emoji';\r\nimport { UserService } from '../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'message-preview',\r\n  templateUrl: './message-preview.component.html',\r\n  styleUrls: ['./message-preview.component.css']\r\n})\r\nexport class MessagePreviewComponent {\r\n  @Input() guild = { name: 'Testing123', memberCount: 420 };\r\n  @Input() eventVariables = true;\r\n\r\n  @Input() content = 'Hello World';\r\n  @Input() author = {\r\n    username: 'Neko',\r\n    avatarURL: 'https://cdn.discordapp.com/avatars/743633561768296599/1ba7c76c436cd2dee8cb2e439ccb7211.png?size=256'\r\n  }\r\n  @Input() member = {\r\n    displayName: 'Neko'\r\n  }\r\n  @Input() createdAt = new Date();\r\n\r\n  constructor(private userService: UserService) {}\r\n\r\n  get timestamp() {\r\n    const createdAt = new Date(this.createdAt ?? new Date());\r\n    const timestamp = createdAt\r\n      .toTimeString()\r\n      .slice(0, 5);\r\n\r\n    const wasToday = new Date().getDay() / createdAt.getDay() === 1;\r\n    const wasYesterday = new Date().getDate() % createdAt.getDate() === 1;\r\n    const isTommorow = createdAt.getTime() % new Date().getDate() === 1;\r\n    \r\n    if (wasToday)\r\n      return `Today at ${timestamp}`;\r\n    if (wasYesterday)\r\n      return `Yesterday at ${timestamp}`;\r\n    else if (isTommorow)\r\n      return `Tommorow at ${timestamp}`;\r\n\r\n    return createdAt\r\n      .toJSON()\r\n      .slice(0,10)\r\n      .split('-')\r\n      .reverse()\r\n      .join('/');\r\n  }\r\n\r\n  get processed() {\r\n    const user = this.userService.user;\r\n\r\n    return (this.eventVariables) ? toHTML(textEmoji(this.content\r\n      .replace(/\\[GUILD\\]/, this.guild?.name)\r\n      .replace(/\\[INSTIGATOR\\]/, '@Neko#6834')\r\n      .replace(/\\[MEMBER_COUNT\\]/g, this.guild?.memberCount.toString())\r\n      .replace(/\\[MESSAGE\\]/g, 'Bad Message')\r\n      .replace(/\\[CHANNEL\\]/g, 'General')\r\n      .replace(/\\[MODULE\\]/g, 'General')\r\n      .replace(/\\[STAFF\\]/g, '@Hamburbur#3134')\r\n      .replace(/\\[NEW_LEVEL\\]/g, '2')\r\n      .replace(/\\[NEW_VALUE\\]/g, JSON.stringify({ prefix: '.' }, null, 2))\r\n      .replace(/\\[OLD_LEVEL\\]/g, '1')\r\n      .replace(/\\[OLD_VALUE\\]/g, JSON.stringify({ prefix: '/' }, null, 2))\r\n      .replace(/\\[REASON\\]/g, 'not having Neko Plus')\r\n      .replace(/\\[USER\\]/g, `@BadUser#6969`)))\r\n      .replace(/\\[XP\\]/g, '300') : toHTML(textEmoji(this.content));\r\n  }\r\n}\r\n","<div class=\"rounded flex-vertical whitney theme-dark\">\r\n    <div class=\"rounded chat flex-vertical flex-spacer\">\r\n        <div class=\"rounded content flex-spacer flex-horizontal\">\r\n            <div class=\"rounded flex-spacer flex-vertical messages-wrapper\">\r\n                <div class=\"scroller-wrap\">\r\n                    <div class=\"scroller messages\">\r\n                        <div class=\"message-group hide-overflow\">\r\n                            <div class=\"avatar-large animate\" [style.backgroundImage]=\"'url(' + author.avatarURL + ')'\"></div>\r\n                            <div class=\"comment\">\r\n                                <div class=\"message first\">\r\n                                    <h2 style=\"line-height: 16px;\">\r\n                                        <span class=\"username-wrapper v-btm\">\r\n                                            <strong class=\"user-name\">{{ member.displayName }}</strong>\r\n                                            <span class=\"bot-tag\">BOT</span>\r\n                                        </span>\r\n                                        <span class=\"highlight-separator\"> - </span>\r\n                                        <span class=\"timestamp\">{{ timestamp }}</span>\r\n                                    </h2>\r\n                                    <div [innerHtml]=\"processed\" class=\"message-text\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export function toIterable(length: number) {\r\n  const array = [];\r\n  for (let i = 0; i < length; i++)\r\n    array.push(i);\r\n  return array;\r\n}\r\n\r\nexport function camelToSentenceCase(words: string) {\r\n  const regex = /([A-Z])(?=[a-z][A-Z])|([a-z])(?=[A-Z])/g;\r\n  return words\r\n      .replace(regex, '$& ')[0]\r\n      .toUpperCase() +\r\n    words\r\n      .replace(regex, '$& ')\r\n      .slice(1);\r\n}\r\n\r\nexport function sentenceToCamelCase(words: string) {\r\n  const capitalized = words\r\n    .replace(/\\s+(.)/g, (match, group) => group.toUpperCase());\r\n  return capitalized[0].toLowerCase() + capitalized.slice(1);\r\n}\r\n\r\nexport function kebabToCamelCase(words: string) {\r\n  if (!words) return null;\r\n\r\n  const arr = words.split('-');\r\n  const capital = arr.map((item, index) => (index)\r\n    ? item.charAt(0).toUpperCase() + item.slice(1).toLowerCase() : item);\r\n\r\n  const capitalized = capital.join('');\r\n  return capitalized[0].toLowerCase() + capitalized.slice(1);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { UserService } from '../services/user.service';\r\nimport { GuildService } from '../services/guild.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardAuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private userService: UserService) {}\r\n\r\n  async canActivate() {\r\n    await this.userService.init();\r\n\r\n    const canActivate = Boolean(this.userService.user); \r\n    if (!canActivate)\r\n      this.router.navigate(['/']);\r\n\r\n    return canActivate;\r\n  }  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  url = `${environment.endpoint}/login`;\r\n\r\n  ngOnInit() {\r\n    window.location.assign(this.url);\r\n  }\r\n}\r\n","<spinner></spinner>","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MusicService {\r\n  endpoint = environment.endpoint + '/guilds';\r\n\r\n  private refreshList: number;\r\n\r\n  private _list = [];\r\n  get list() { return this._list; }\r\n  \r\n  private _paused = false;\r\n  get paused() { return this._paused; }\r\n\r\n  private _current = 0;\r\n  get current() { return this._current; }\r\n  \r\n  private _max = Infinity;\r\n  get max() { return this._max; }\r\n  \r\n  private get key() {\r\n    return localStorage.getItem('key');\r\n  }\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async toggle(id: string) {\r\n    try {\r\n      (this.paused) \r\n        ? await this.http.get(`${this.endpoint}/${id}/music/resume?key=${this.key}`).toPromise() as Promise<any>\r\n        : await this.http.get(`${this.endpoint}/${id}/music/pause?key=${this.key}`).toPromise() as Promise<any>;\r\n      \r\n      this._paused = !this.paused;\r\n    } catch {}\r\n  }\r\n\r\n  async updateList(id: string) {\r\n    this._list = await (this.http.get(`${this.endpoint}/${id}/music/list?key=${this.key}`)\r\n      .toPromise() as Promise<any>);\r\n\r\n    if (this.list.length === 1) {\r\n      this._paused = false;\r\n\r\n      clearInterval(this.refreshList);\r\n      this.refreshList = window.setInterval(() => this.incrementPosition(id), 1 * 1000);\r\n    }\r\n  }\r\n\r\n  private async incrementPosition(id: string) {\r\n    if (this.paused || this.list.length <= 0) return;\r\n\r\n    this._current++;\r\n\r\n    this._max = this.list[0].duration / 1000;\r\n    if (this._current >= this._max) {\r\n      this._current = 0;\r\n      await this.updateList(id);\r\n    }\r\n  }\r\n\r\n  async skip(id: string) {\r\n    await this.http.get(`${this.endpoint}/${id}/music/skip?key=${this.key}`).toPromise() as Promise<any>;\r\n    this.list.splice(0, 1);\r\n    this._current = 0;\r\n  }\r\n\r\n  async play(id: string, query: string) {\r\n    await this.http.get(`${this.endpoint}/${id}/music/play?key=${this.key}&query=${query}`).toPromise() as Promise<any>;\r\n    await this.updateList(id);\r\n  }\r\n\r\n  async stop(id: string) {\r\n    await this.http.get(`${this.endpoint}/${id}/music/stop?key=${this.key}`).toPromise() as Promise<any>;\r\n    this._paused = true;\r\n    this._list = [];\r\n    this._current = 0;\r\n  }\r\n\r\n  async removeTrack(id: string, position: number) {\r\n    await this.http.get(`${this.endpoint}/${id}/music/remove/${position}?key=${this.key}`).toPromise() as Promise<any>;    \r\n    await this.updateList(id);\r\n  }\r\n\r\n  async seek(id: string, position: number) {\r\n    await this.http.get(`${this.endpoint}/${id}/music/seek/${position}?key=${this.key}`).toPromise() as Promise<any>;\r\n    this._current = position;\r\n  }\r\n\r\n  setVolume(id: string, value: number) {\r\n    return this.http.get(`${this.endpoint}/${id}/music/set-volume/${value}?key=${this.key}`).toPromise() as Promise<any>;\r\n  }\r\n\r\n  async shuffle(id: string) {\r\n    await this.http.get(`${this.endpoint}/${id}/music/shuffle?key=${this.key}`).toPromise() as Promise<any>;\r\n    await this.updateList(id);\r\n  }\r\n}\r\n","<div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n        <form #f=\"ngForm\" [formGroup]=\"form\" (ngSubmit)=\"submit(f.value)\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Customize XP Card</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <img [src]=\"xpCardPreviewURL\" alt=\"\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Primary</mat-label>\r\n                            <input matInput\r\n                                (cpSliderDragEnd)=\"updatePreview()\" \r\n                                [value]=\"colorPickers[0]\" \r\n                                [(colorPicker)]=\"colorPickers[0]\" \r\n                                formControlName=\"primary\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"d-block\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Secondary</mat-label>\r\n                            <input matInput\r\n                                (cpSliderDragEnd)=\"updatePreview()\" \r\n                                [value]=\"colorPickers[1]\" \r\n                                [(colorPicker)]=\"colorPickers[1]\"\r\n                                formControlName=\"secondary\">                            \r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Tertiary</mat-label>\r\n                            <input matInput\r\n                                (cpSliderDragEnd)=\"updatePreview()\" \r\n                                [value]=\"colorPickers[2]\"\r\n                                [(colorPicker)]=\"colorPickers[2]\"\r\n                                formControlName=\"tertiary\">                            \r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Background URL</mat-label>\r\n                    <input *ngIf=\"savedUser.premium\"\r\n                        type=\"url\" matInput\r\n                        formControlName=\"backgroundURL\">\r\n                    <input *ngIf=\"!savedUser.premium\"\r\n                        type=\"url\" matInput premium readonly\r\n                        formControlName=\"backgroundURL\">\r\n                </mat-form-field>\r\n                <p>or choose from these...</p>\r\n                <div class=\"row\">\r\n                    <div *ngFor=\"let image of stockImages\"\r\n                        (click)=\"setBackground(image)\"\r\n                        class=\"col-6 stock-image\">\r\n                        <img [src]=\"image\" class=\"m-1\">\r\n                    </div>                        \r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary mr-2\" data-dismiss=\"modal\" mat-button>Close</button>\r\n                <button id=\"submit\" type=\"submit\" class=\"btn btn-primary\" mat-button>Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UserService, XPCard } from '../../../services/user.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'customize-xp-card',\r\n  templateUrl: './customize-xp-card.component.html',\r\n  styleUrls: ['./customize-xp-card.component.css']\r\n})\r\nexport class CustomizeXPCardComponent implements OnInit {\r\n  @Output() xpCardUpdate = new EventEmitter();\r\n\r\n  stockImages = [\r\n    `https://i.imgur.com/kHy5Q2P.png`,\r\n    'https://i.imgur.com/9V5WeUo.png',\r\n    'https://i.imgur.com/YUnUeX4.jpg',\r\n    'https://i.imgur.com/TXF4t1h.jpg',\r\n    'https://i.imgur.com/lKKJyMq.png',\r\n    'https://i.imgur.com/Nzy4VzG.jpg',\r\n    'https://i.imgur.com/yUrfSZY.png',\r\n    'https://i.imgur.com/ObYWkod.png',\r\n    'https://i.imgur.com/0dScwgd.png',\r\n    'https://i.imgur.com/gl4iXdx.jpg'\r\n  ]\r\n  colors = {\r\n      primary: '#ffffff',\r\n      secondary: '#ababab',\r\n      tertiary: '#cdcbcb'\r\n  }\r\n  colorPickers = [];\r\n\r\n  xpCardPreviewURL: string;\r\n\r\n  get savedUser() { return this.userService.savedUser || {}; }\r\n\r\n  get primary() { return this.form.get('primary'); }\r\n  get secondary() { return this.form.get('secondary'); }\r\n  get tertiary() { return this.form.get('tertiary'); }\r\n  get backgroundURL() { return this.form.get('backgroundURL'); }\r\n\r\n  form = new FormGroup({\r\n    primary: new FormControl(''),\r\n    secondary: new FormControl(''),\r\n    tertiary: new FormControl(''),\r\n    backgroundURL: new FormControl('', Validators.required)\r\n  });\r\n\r\n  constructor(\r\n    private userService: UserService) {}\r\n\r\n  async ngOnInit() {\r\n    await this.userService.init();\r\n\r\n    this.initFormValues();\r\n    this.updatePreview();\r\n  }\r\n\r\n  initFormValues() {\r\n    const xpCard = this.savedUser.xpCard;\r\n    this.colorPickers = [\r\n      xpCard.primary ?? this.colors.primary,\r\n      xpCard.secondary ?? this.colors.secondary,\r\n      xpCard.tertiary ?? this.colors.tertiary\r\n    ];    \r\n    this.backgroundURL.setValue(xpCard.backgroundURL);\r\n  }\r\n\r\n  async submit(form: XPCard) {    \r\n    await this.userService.updateXPCard(form);\r\n    this.xpCardUpdate.emit();\r\n  }\r\n\r\n  updatePreview() {    \r\n    this.setValues();\r\n\r\n    const primary = this.hexToRGB(this.primary.value);\r\n    const secondary = this.hexToRGB(this.secondary.value);  \r\n    const tertiary = this.hexToRGB(this.tertiary.value);  \r\n    const backgroundURL = this.backgroundURL.value;\r\n    \r\n    this.xpCardPreviewURL = this.userService.getXPCardPreviewURL(\r\n      { primary, secondary, tertiary, backgroundURL });\r\n  }\r\n  private setValues() {    \r\n    this.primary.setValue(this.colorPickers[0]);\r\n    this.secondary.setValue(this.colorPickers[1]);\r\n    this.tertiary.setValue(this.colorPickers[2]);\r\n  }\r\n  private hexToRGB(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    if (!result)\r\n      return '';\r\n    const r = parseInt(result[1], 16);\r\n    const g = parseInt(result[2], 16);\r\n    const b = parseInt(result[3], 16);\r\n    return `rgb(${r},${g},${b})`;\r\n  }\r\n\r\n  setBackground(url: string) {\r\n    this.backgroundURL.setValue(url);\r\n    this.updatePreview();\r\n  }\r\n}\r\n","<guild-sidebar>\r\n  <div class=\"container\">\r\n    <div class=\"d-flex justify-content-between\">\r\n      <h1 class=\"display-3\">Music</h1>\r\n    </div>\r\n    <hr>\r\n    <h3>Music Manager</h3>\r\n    <p class=\"desc\">Manage music without commands. You must be in a voice channel first.</p> \r\n    <div class=\"rounded manager row p-3\">\r\n      <div class=\"player col-lg-6 border-right border-dark\">\r\n        <h5 class=\"float-none\">Player</h5>\r\n        <div class=\"controls\"\r\n          (keyup.j)=\"!focused && service.seek(guildId, max(slider.value - 10, 0))\"\r\n          (keyup.l)=\"!focused && service.seek(guildId, min(slider.value + 10, service.list[0]?.duration))\"\r\n          (keyup.k)=\"!focused && service.toggle(guildId)\"\r\n          (keyup.enter)=\"search.value.length >= minSearchLength && service.play(guildId, search.value)\">\r\n          <div class=\"play\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Search</mat-label>\r\n              <input id=\"search\" type=\"search\"\r\n                matInput #search required\r\n                [disabled]=\"service.list.length >= 5\">\r\n            </mat-form-field>\r\n            <button mat-button color=\"success\"\r\n              class=\"ml-2\"\r\n              [disabled]=\"service.list.length >= 5\"\r\n              (click)=\"search.value.length >= minSearchLength && service.play(guildId, search.value)\">+</button>\r\n          </div>\r\n          <div class=\"player-bar\">         \r\n            <!-- seek -->\r\n            <mat-slider type=\"range\"\r\n              [disabled]=\"service.list.length <= 0\" #slider\r\n              min=\"0\" [max]=\"service.list[0]?.duration / 1000\" [value]=\"service.current\" step=\"1\"\r\n              tickInterval=\"1\" thumbLabel\r\n              (change)=\"service.seek(guildId, slider.value)\"></mat-slider>\r\n              <p class=\"pl-5\">{{ service.current | durationString }} <span class=\"text-muted\">/ {{ service.list[0]?.duration.seconds | durationString }}</span></p>\r\n          </div>\r\n          <div class=\"player-controls\">\r\n            <!-- pause/resume -->\r\n            <button id=\"toggle\" mat-button color=\"primary\"\r\n              [disabled]=\"service.list.length <= 0\"\r\n              (click)=\"service.toggle(guildId)\"\r\n              matTooltip=\"Toggle Playback\">\r\n              <i [class]=\"service.paused ? 'fa-play' : 'fa-pause'\" class=\"fa\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <!-- stop -->\r\n            <button id=\"stop\" mat-button color=\"warn\"\r\n              [disabled]=\"service.list.length <= 0\"\r\n              (click)=\"service.stop(guildId)\"\r\n              matTooltip=\"Stop\">\r\n              <i class=\"fas fa-stop\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <!-- skip -->\r\n            <button id=\"skip\" mat-button color=\"yellow\"\r\n              [disabled]=\"service.list.length <= 1\"\r\n              (click)=\"service.skip(guildId)\"\r\n              matTooltip=\"Skip\">\r\n              <i class=\"fas fa-forward\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <!-- shuffle -->\r\n            <button id=\"shuffle\" mat-button\r\n              [disabled]=\"service.list.length <= 0\"\r\n              (click)=\"service.shuffle(guildId)\"\r\n              matTooltip=\"Shuffle\">\r\n              <i class=\"fas fa-random\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"player-controls\">\r\n            <!-- volume -->\r\n            <button id=\"volume\" mat-button\r\n              [disabled]=\"service.list.length <= 0\">\r\n              <i class=\"fas fa-volume-up\" aria-hidden=\"true\"></i>              \r\n            </button>\r\n            <mat-slider type=\"range\" #level\r\n              min=\"0\" max=\"100\" value=\"100\"\r\n              [disabled]=\"service.list.length <= 0\"\r\n              (change)=\"service.setVolume(guildId, level.value)\"></mat-slider>\r\n          </div>\r\n          <hr class=\"d-block d-md-none\">    \r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"d-flex justify-content-between\">\r\n          <h5>Queue</h5>\r\n          <!-- refresh -->\r\n          <button mat-button\r\n            (click)=\"service.updateList(guildId)\">\r\n            <i class=\"fas fa-sync\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n        <ul class=\"list-group border-bottom pb-2 border-muted\">\r\n          <div *ngFor=\"let track of service.list; index as i\"\r\n            class=\"track list-group-item\">\r\n            <span class=\"mt-2\"><code>{{ track.duration.timestamp }}</code><a [href]=\"track.uri\"> {{ track.title | truncated : 36 }}</a></span>\r\n            <button class=\"float-right\" color=\"warn\" mat-button\r\n              (click)=\"service.removeTrack(guildId, i)\">x</button>\r\n          </div>\r\n        </ul>\r\n        <strong>{{ service.list?.length }}<span class=\"text-muted\">/5</span></strong>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</guild-sidebar>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ModuleConfig } from 'src/app/module-config';\r\nimport { GuildService } from 'src/app/services/guild.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MusicService } from 'src/app/services/music.service';\r\n\r\n@Component({\r\n  selector: 'app-music-module',\r\n  templateUrl: './music-module.component.html',\r\n  styleUrls: ['./music-module.component.css']\r\n})\r\nexport class MusicModuleComponent extends ModuleConfig implements OnInit {\r\n  minSearchLength = 2;\r\n  moduleName = 'music';\r\n\r\n  get focused() { return document.activeElement.id === 'search'; }\r\n  \r\n  constructor(\r\n    public guildService: GuildService,\r\n    route: ActivatedRoute,\r\n    saveChanges: MatSnackBar,\r\n    public service: MusicService) {\r\n    super(guildService, route, saveChanges);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await super.init();\r\n    await this.service.updateList(this.guildId);\r\n  }\r\n  \r\n  buildForm({ music }) {\r\n    return new FormGroup({\r\n      enabled: new FormControl(music.enabled ?? true)\r\n    });\r\n  }\r\n\r\n  min(a: number, b: number) { return Math.min(a, b); }\r\n  max(a: number, b: number) { return Math.max(a, b); }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n        <h5>Changes</h5>\r\n    </div>\r\n    <div class=\"col-md-9\">\r\n        <table *ngIf=\"changes\" class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th class=\"pl-5\">By</th>\r\n                    <th>At</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let change of changes; index as i\">\r\n                    <td scope=\"row\">\r\n                        {{ changeCount - i }}\r\n                    </td>\r\n                    <td class=\"user\">\r\n                        <member-username [member]=\"getMember(change.by)\"\r\n                            [withAvatar]=\"false\"></member-username>\r\n                    </td>\r\n                    <td>{{ change.at | miniDate }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { GuildService } from 'src/app/services/guild.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'audit-log-widget',\r\n  templateUrl: './audit-log-widget.component.html',\r\n  styleUrls: ['./audit-log-widget.component.css']\r\n})\r\nexport class AuditLogWidgetComponent implements OnInit {\r\n  rows = 3;\r\n\r\n  changeCount = 0;\r\n  members: any[];\r\n  changes: any[];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private guildService: GuildService) {}\r\n\r\n  async ngOnInit() {\r\n    this.route.paramMap.subscribe(async(val) => {\r\n      const id = val.get('id');\r\n\r\n      this.members = await this.guildService.getMembers(id);\r\n  \r\n      const { changes } = await this.guildService.getSavedLog(id);\r\n      this.changeCount = changes.length;\r\n      this.changes = changes.splice(changes.length - this.rows, changes.length);\r\n    });\r\n  }\r\n\r\n  getMember(id: string) {          \r\n    return this.members.find(m => m.id === id) || {};\r\n  }\r\n}\r\n","<guild-sidebar [waitFor]=\"savedGuild && general\">\r\n    <div *ngIf=\"form\" class=\"container\">\r\n        <form #f=\"ngForm\" [formGroup]=\"form\">\r\n            <div class=\"d-flex justify-content-between flex-column\">\r\n                <h1 class=\"display-3\">Captcha Verification</h1>\r\n                <p>Please do this before users start verifying as it could cause issues </p>\r\n            </div>\r\n            <hr>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-4 col-sm-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Verification Channel</mat-label>\r\n                        <mat-select\r\n                            formControlName=\"captchaChannel\">\r\n                            <mat-option *ngFor=\"let channel of textChannels\" \r\n                                [value]=\"channel.id\">#{{ channel.name }}\r\n                                <span class=\"float-right text-muted\">[{{ getChannel(channel.parentID)?.name || 'N/A' }}]</span>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-lg-4 col-sm-6\">\r\n                    <mat-form-field appearance=\"outline\" class=\"p-2\">\r\n                        <mat-label>Unverified Role</mat-label>\r\n                        <mat-select\r\n                            formControlName=\"unverifiedRole\">\r\n                            <mat-option *ngFor=\"let role of roles\" \r\n                                [value]=\"role.id\"\r\n                                [style.color]=\"'#' + role.color?.toString(16)\">@{{ role.name }}</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-lg-4 col-sm-6\">\r\n                    <mat-form-field appearance=\"outline\" class=\"p-2\">\r\n                        <mat-label>Verified Role</mat-label>\r\n                        <mat-select\r\n                            formControlName=\"verifiedRole\">\r\n                            <mat-option *ngFor=\"let role of roles\" \r\n                                [value]=\"role.id\"\r\n                                [style.color]=\"'#' + role.color?.toString(16)\">@{{ role.name }}</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</guild-sidebar>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ModuleConfig } from '../../../module-config';\r\nimport { GuildService } from '../../../services/guild.service';\r\n\r\n@Component({\r\n  selector: 'captcha-module',\r\n  templateUrl: './captcha-module.component.html',\r\n  styleUrls: ['./captcha-module.component.css']\r\n})\r\nexport class CaptchaModuleComponent extends ModuleConfig implements OnInit {\r\n  moduleName = 'captchaSettings';\r\n\r\n\r\n  get general() { return this.savedGuild.general; }\r\n  get captchaSettings(): captcha { return this.savedGuild.captchaSettings; }\r\n\r\n  constructor(\r\n    guildService: GuildService,\r\n    route: ActivatedRoute,\r\n    saveChanges: MatSnackBar) {\r\n    super(guildService, route, saveChanges);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await super.init();\r\n\r\n\r\n    \r\n  }\r\n\r\n  buildForm({ general, captchaSettings }: any) {\r\n    const formGroup = new FormGroup({\r\n      captchaChannel: new FormControl(captchaSettings.captchaChannel ?? ''),\r\n      unverifiedRole: new FormControl(captchaSettings.unverifiedRole ?? ''),\r\n      verifiedRole: new FormControl(captchaSettings.verifiedRole ?? '')\r\n    });\r\n    return formGroup;\r\n  }\r\n}\r\n\r\nexport interface captcha {\r\n  captchaVerification: boolean;\r\n  captchaChannel: string;\r\n  unverifiedRole: string;\r\n  verifiedRole: string;\r\n}\r\n"," \r\n\r\n<section class=\"jumbotron\"> \r\n    <navbar></navbar>\r\n\r\n    <div class=\"informationContainer\">\r\n\r\n      <div class=\"leaderboardsContainer\" style=\"overflow:scroll;\">\r\n        <h2>Leaderboards</h2>\r\n        <div id=\"leaderboard\">\r\n          <div *ngFor=\"let member of members\"\r\n              class=\"member\">\r\n              <span [class]=\"'rank-' + (members.indexOf(member) + 1)\" \r\n                  class=\"rank\">{{ members.indexOf(member) + 1 }}</span>\r\n              <member-username [member]=\"member\"></member-username>\r\n              <div class=\"float-right pt-2 d-md-block d-none\" style=\"align-self: flex-start; margin-top: -2px;\">\r\n                  <span class=\"info\">\r\n                      <span>LVL</span>\r\n                      <strong> {{ member.level }}</strong>\r\n                  </span>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n      <div class=\"middleContainer\">\r\n        <div class=\"middleItemContainer\">\r\n          <h2>Your Title</h2>\r\n          <code>{{ userTitle || 'You Didn\\'t Set a Title' }}</code>\r\n        </div>\r\n        <div class=\"middleItemContainer\">\r\n          <h2>Your Reps</h2>\r\n          <code>{{ reps }}</code>\r\n        </div>\r\n        <div class=\"middleItemContainer\">\r\n          <h2>Your Stats</h2>\r\n          <div class=\"middleInfo\">\r\n            <img src=\"https://cdn.discordapp.com/emojis/665046162616614922.gif?size=96\" height=\"48\">\r\n            <p>Starberry Milk</p>\r\n            <code>{{ balance || 0 }}</code>\r\n          </div>\r\n          <div class=\"middleInfo DailyStreak\">\r\n            <img src=\"https://cdn.discordapp.com/emojis/920821387860508723.gif?size=96\" height=\"48\">\r\n            <p>Daily Streak</p>\r\n            <code>{{ savedMember.daily.dailyStreak || 0 }}</code>\r\n          </div>\r\n          <div class=\"middleInfo\">\r\n            <img src=\"https://cdn.discordapp.com/emojis/684217865028894799.gif?size=44\" height=\"48\">\r\n            <p>XP</p>\r\n            <code>{{ member.xp || 0 }}</code>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"leaderboardsContainer\" style=\"position: relative;\">\r\n\r\n        <h2>Your Reminders</h2>\r\n\r\n        <div class=\"reminder-info\">\r\n          <p class=\"reminder-info-text\">Content</p>\r\n          <p class=\"reminder-info-text\">Reminder ID</p>\r\n          <p class=\"reminder-info-text\">When</p>\r\n        </div>\r\n\r\n        <div *ngFor=\"let reminder of reminders\"\r\n              class=\"reminder\">\r\n          <p class=\"reminder-text\">{{ reminder.content }}</p>\r\n          <p class=\"reminder-text\">{{ reminder.id }}</p>\r\n          <p class=\"reminder-text\">{{ getReminderExpiery(reminder) }}</p>\r\n        </div>\r\n        \r\n\r\n        <div id=\"adminButton\" (click)=\"adminDashboard()\" [hidden]=\"!hasPerms\">\r\n            <h2 id=\"adminText\">Admin Dashboard</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</section>\r\n\r\n<footer>\r\n  <waves></waves>\r\n  <div class=\"content d-flex flex-column justify-content-end\" style=\"max-height: 76px;\">\r\n    <span class=\"d-flex justify-content-center\" style=\"padding-bottom: 1vh; max-height: fit-content;\">\r\n      <a routerLink=\"/invite\" target=\"_blank\" class=\"socialButtons\">\r\n          <i class=\"fab fa-discord\" style=\"color: white; font-size: 34px; margin-right: 10px;\"></i>\r\n      </a>\r\n      <a href=\"https://twitter.com/nekoyorisou\" target=\"_blank\" class=\"socialButtons\">\r\n          <i class=\"fab fa-twitter-square\" style=\"color: white; font-size: 34px; margin-right: 10px;\"></i>\r\n      </a>\r\n      <a href=\"https://www.instagram.com/nekoyorisou\" target=\"_blank\" class=\"socialButtons\">\r\n          <i class=\"fab fa-instagram\" style=\"color: white; font-size: 34px; margin-right: 10px;\"></i>\r\n      </a>\r\n    </span>\r\n  </div>\r\n</footer>\r\n<!---\r\n  <h2 class=\"display-3 mb-3\">Good {{ isItMorning ? 'Morning' : 'Afternoon'}}, {{ user.username }}</h2>\r\n<div class=\"mt-3\" #feedbackForm>\r\n        <br>\r\n        <strong>First Impressions / Feedback / Report Bug</strong>:\r\n        <br>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Feedback</mat-label>\r\n          <input type=\"text\" matInput #feedback>\r\n        </mat-form-field>\r\n        <button\r\n          #feedbackButton\r\n          [disabled]=\"!feedback.value\"\r\n          class=\"btn btn-success ml-3 mb-2\"\r\n          (click)=\"apiService.sendFeedback(feedback.value) && feedbackForm.innerHTML = 'Thank you for your feedback!'\"\r\n          matButton>Send</button>\r\n\r\n      </div>-->","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport ms from 'ms'\r\n\r\nimport { GuildService } from 'src/app/services/guild.service';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard-overview.component.html',\r\n  styleUrls: ['./dashboard-overview.component.css']\r\n})\r\nexport class DashboardOverviewComponent implements OnInit {\r\n  get user() { return this.userService.user; }\r\n  get reps() { return this.userService.savedUser.xpCard.reps }\r\n  get userTitle() { return this.userService.savedUser.xpCard.title }\r\n  StatsShown: boolean = true;\r\n  members: any;\r\n  balance: any;\r\n  savedMember: any;\r\n  member: any;\r\n  hasPerms: boolean = false;\r\n  guild: any = {};\r\n  reminders: Reminder[];\r\n\r\n  constructor(\r\n    public apiService: ApiService,\r\n    private router: Router,\r\n    private guildService: GuildService,\r\n    private userService: UserService) {\r\n    document.title = 'Neko - Dashboard';\r\n  }\r\n\r\n  isUserTitle() {\r\n    if (this.userTitle) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isItMorning() {\r\n    let hour = new Date().getHours();\r\n    if (hour < 12) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  adminDashboard() {\r\n    this.router.navigate([`/dashboard/admin/${this.guild.id}`]);\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    const guildId = environment.guildId;\r\n\r\n    this.members = await this.guildService.getMembers(guildId);\r\n\r\n    this.members.forEach(async (member) => {\r\n      if(member.id == this.user.id) {\r\n        this.member = member;\r\n      this.balance = await this.guildService.getBalance(guildId, this.user.id);\r\n\r\n      }\r\n    })\r\n\r\n    let savedmember = await this.guildService.getSavedMember(guildId, this.user.id);\r\n    this.savedMember = savedmember;\r\n\r\n    let userHasPerms = await this.guildService.getMemberStatus(guildId, this.user.id);\r\n    this.hasPerms = userHasPerms;\r\n\r\n    let userReminders: Reminder[] = await this.userService.getReminders();\r\n    this.reminders = userReminders;\r\n\r\n    this.guild = await this.guildService.getPublicGuild(guildId);\r\n  }\r\n\r\n  getReminderExpiery(reminder: Reminder) {\r\n    return ms(reminder.expiresMilliseconds - Date.now())\r\n  }\r\n\r\n}\r\n\r\nexport interface Reminder {\r\n  id: string;\r\n  content: string;\r\n  expires: Date;\r\n  expiresMilliseconds: number;\r\n}\r\n","<sidebar>\r\n  <div *ngIf=\"guild\" class=\"side-nav navbar-dark\">\r\n    <div class=\"header\">\r\n      <div class=\"d-flex justify-content-center\">\r\n        <img *ngIf=\"guild.iconURL\"\r\n          [src]=\"guild.iconURL\" [alt]=\"guild.name\">\r\n        <div *ngIf=\"!guild.iconURL\"\r\n          class=\"alt-name d-flex flex-column justify-content-center\">\r\n          <span>{{ guild.nameAcronym }}</span>\r\n        </div>\r\n      </div>\r\n      <h4 [routerLink]=\"['/dashboard/admin/' + id]\">{{ guild.name }}</h4>\r\n    </div>\r\n      <div class=\"category\">General</div>\r\n      <div *ngIf=\"guild\" class=\"navbar-nav\">\r\n        <a [routerLink]=\"['/servers/' + id + '/embed']\" routerLinkActive=\"active\"\r\n        [class.interactive-muted]=\"!savedGuild.autoMod?.enabled\"\r\n        class=\"nav-item nav-link\">\r\n        <i class=\"text-muted fas fa-indent\"></i> Embed Messages</a>\r\n      </div>\r\n      \r\n\r\n      <div class=\"category\">Config</div>\r\n      <div *ngIf=\"guild && savedGuild\"\r\n        class=\"navbar-nav\">\r\n\r\n        <a [routerLink]=\"['/servers/' + id + '/auto-mod']\" routerLinkActive=\"active\"\r\n          [class.interactive-muted]=\"!savedGuild.autoMod?.enabled\"\r\n          class=\"nav-item nav-link\">\r\n          <i class=\"text-muted fas fa-gavel\"></i> Auto-mod</a>\r\n        \r\n        <a [routerLink]=\"['/servers/' + id + '/captcha']\" routerLinkActive=\"active\"\r\n        [class.interactive-muted]=\"!savedGuild.autoMod?.enabled\"\r\n        class=\"nav-item nav-link\">\r\n        <i class=\"text-muted fas fa-qrcode\"></i> Captcha</a>\r\n\r\n        <a [routerLink]=\"['/servers/' + id + '/general']\" routerLinkActive=\"active\"\r\n          [class.interactive-muted]=\"!savedGuild.general?.enabled\"\r\n          class=\"nav-item nav-link\">\r\n          <i class=\"text-muted fas fa-terminal\"></i> General</a>\r\n\r\n        <a [routerLink]=\"['/servers/' + id + '/leveling']\" routerLinkActive=\"active\"\r\n          [class.interactive-muted]=\"!savedGuild.leveling?.enabled\"\r\n          class=\"nav-item nav-link\">\r\n          <i class=\"text-muted fas fa-star\"></i> Leveling</a>\r\n\r\n        <a [routerLink]=\"['/servers/' + id + '/logs']\" routerLinkActive=\"active\"\r\n          [class.interactive-muted]=\"!savedGuild.logs?.enabled\"\r\n          class=\"nav-item nav-link\">          \r\n          <i class=\"text-muted fas fa-clone\"></i> Logs</a>\r\n\r\n        <a [routerLink]=\"['/servers/' + id + '/reaction-roles']\" routerLinkActive=\"active\"\r\n          [class.interactive-muted]=\"!savedGuild.reactionRoles?.enabled\"\r\n          class=\"nav-item nav-link\">\r\n          <i class=\"text-muted fas fa-theater-masks\"></i> Reaction Roles</a>\r\n      </div>\r\n\r\n      <div class=\"category\">More</div>\r\n      <div class=\"navbar-nav\">\r\n        <a [routerLink]=\"['/servers/' + id + '/log']\" routerLinkActive=\"active\"\r\n          class=\"nav-item nav-link\">\r\n          <i class=\"text-muted fas fa-file-alt\"></i> Log</a>\r\n        <a [routerLink]=\"['/servers/' + id + '/warnings']\" routerLinkActive=\"active\"\r\n            class=\"nav-item nav-link\">\r\n            <i class=\"text-muted fas fa-exclamation-triangle\"></i> Warnings</a>\r\n        \r\n      </div>\r\n\r\n      <div class=\"category\">Other</div>\r\n      <div class=\"navbar-nav\">\r\n        <a [routerLink]=\"['/servers/' + id + '/settings']\" routerLinkActive=\"active\"\r\n          class=\"nav-item nav-link\">\r\n          <i class=\"text-muted fa fa-cog\"></i> Settings\r\n        </a>\r\n      </div>\r\n    </div>\r\n  <div id=\"content\">\r\n    <div *ngIf=\"loaded\">\r\n      <ng-content></ng-content>\r\n      <div class=\"mt-5 pt-2\"></div>\r\n    </div>\r\n    <div *ngIf=\"!loaded\">\r\n      <spinner></spinner>\r\n    </div>\r\n  </div>\r\n</sidebar>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { GuildService } from '../../../services/guild.service';\r\n\r\n\r\n@Component({\r\n  selector: 'guild-sidebar',\r\n  templateUrl: './guild-sidebar.component.html',\r\n  styleUrls: ['./guild-sidebar.component.css']\r\n})\r\nexport class GuildSidebarComponent implements OnInit {\r\n\r\n  @Input('waitFor') loaded = true;\r\n  \r\n  id: string;\r\n  guild: any;\r\n  savedGuild: any;\r\n\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) {\r\n      document.title = 'Neko - Dashboard';\r\n    }\r\n\r\n\r\n  async ngOnInit() {\r\n\r\n    this.route.paramMap.subscribe(async(paramMap) => {\r\n      this.id = paramMap.get('id');\r\n\r\n      this.savedGuild = await this.guildService.getSavedGuild(this.id);\r\n\r\n\r\n      this.guild = this.guildService.getGuild(this.id);\r\n      \r\n      //if (!this.guild)\r\n        //this.router.navigate(['/dashboard']);\r\n    });\r\n  }\r\n}\r\n","<guild-sidebar>\r\n    <section class=\"container\">\r\n        <div class=\"row color-heading\">\r\n            <div class=\"col-lg-3 col-sm-6\">\r\n                <div class=\"stats1 cursor-pointer\">\r\n                    <i class=\"fa fa-code\" aria-hidden=\"true\"></i>\r\n                    Ran {{ commands?.length | number }} Commands\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-3 col-sm-6\">\r\n                <div [class]=\"botNeedsPerms ? 'needPerms' : ''\"\r\n                    [matTooltip]=\"botNeedsPerms\r\n                        ? 'Bot requires \\'ADMINISTRATOR\\' to allow all functionality.'\r\n                        : 'Bot has \\'ADMINISTRATOR\\' and can perform to its full potential.'\"\r\n                    class=\"stats2 cursor-pointer\">\r\n                    <div *ngIf=\"botNeedsPerms\">\r\n                        <i class=\"fa fa-lock\" aria-hidden=\"true\"></i> Missing Permissions\r\n                    </div>\r\n                    <div *ngIf=\"!botNeedsPerms\">\r\n                        <i class=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i> Ready\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-3 col-sm-6\">\r\n                <div class=\"stats3 cursor-pointer\">\r\n                    <i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> {{ guild.channels?.length }} Channels\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-3 col-sm-6\">\r\n                <div class=\"stats4 cursor-pointer\">\r\n                    <i class=\"fa fa-user-o\" aria-hidden=\"true\"></i> {{ guild.memberCount | number }} Members\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</guild-sidebar>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { GuildService } from '../../../services/guild.service';\r\n\r\n@Component({\r\n  selector: 'app-guild',\r\n  templateUrl: './guild.component.html',\r\n  styleUrls: ['./guild.component.css']\r\n})\r\nexport class GuildComponent implements OnInit {\r\n  commands: any[]\r\n  botNeedsPerms = false;\r\n  guild: any;\r\n\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private route: ActivatedRoute) {}\r\n\r\n  async ngOnInit() {\r\n    const id = environment.guildId\r\n    this.guild = this.guildService.getGuild(id);\r\n\r\n    const { commands } = await this.guildService.getSavedLog(this.guild.id);\r\n    this.commands = commands;\r\n\r\n    const { hasAdmin } = await this.guildService.getBotStatus(id);\r\n    this.botNeedsPerms = !hasAdmin;\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'cleanDateTime' })\r\nexport class CleanDateTimePipe implements PipeTransform {\r\n\r\n  transform(dateString: string, ...args: unknown[]) {\r\n    const date = new Date(dateString);\r\n    let hours = date.getHours().toString().padStart(2, '0');\r\n    let minutes = date.getMinutes().toString().padStart(2, '0');\r\n    let day = date.getDate().toString().padStart(2, '0');\r\n    \r\n    const month = date.toLocaleString('default', { month: 'long' });\r\n    return `${month} ${day} ${date.getFullYear()}, ${hours}:${minutes}`;\r\n  }\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","<navbar bg=\"secondary\"></navbar>\r\n<header class=\"container jumbotron text-center pb-2\">\r\n  <h2 id=\"title\">Commands</h2>\r\n  <p class=\"lead subTitle\">View a list of Neko's Discord chat commands.</p>\r\n</header>\r\n<section class=\"container px-lg-5\">\r\n  <div class=\"column\">\r\n    <div class=\"col-sm-3 commandSelection\">\r\n      <ul class=\"categories d-inline-flex\">\r\n        <li *ngFor=\"let mod of modules\"\r\n          (click)=\"setModule(mod.name)\"\r\n          class=\"list-group-item my-1 rounded cursor-pointer mx-2 d-flex align-middle justify-content-evenly text-center align-items-center py-1\"\r\n          [class.active]=\"mod.name === selectedModule\">\r\n          <i class=\"fas mr-1 icon\"\r\n            [class]=\"mod.icon\"></i>\r\n          <span>{{ mod.name | camelToSentenceCase }}</span>\r\n        </li>\r\n\r\n        <div *ngIf=\"guild\">\r\n          <p class=\"category\">{{ guild.name }}</p>\r\n          <li (click)=\"setModule('custom')\"\r\n            class=\"list-group-item my-1 rounded cursor-pointer\"\r\n            [class.active]=\"selectedModule === 'custom'\">\r\n            <i class=\"fas fa-cogs mr-1 text-warning\"></i>\r\n            <span>Custom</span>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n    <div class=\"col-sm-9 align-middle align-items-center d-inline \">\r\n      <ul class=\"list-none commands\">\r\n        <li *ngFor=\"let command of displayedCommands\"\r\n          style=\"margin-left: 20%; margin-right: 20%;\"\r\n          class=\"my-1 rounded\">\r\n          <zippy [title]=\"command.name\">\r\n            <p class=\"m-0\"><strong>Usage</strong>: <code>{{ command.usage }}</code></p>\r\n            <p class=\"m-0\"><strong>Summary</strong>: {{ command.summary }}</p>\r\n            <p *ngIf=\"command.precondition\"\r\n              class=\"m-0\"><strong>Permission</strong>: <code>{{ command.precondition | snakeToSentenceCase }}</code></p>\r\n            <p *ngIf=\"command.anywhere\"\r\n              class=\"m-0\"><strong>Executable Anywhere?</strong>: <code>{{ command.anywhere }}</code></p>\r\n          </zippy>\r\n        </li>\r\n      </ul>\r\n      <div *ngIf=\"displayedCommands.length <= 0\"\r\n        class=\"pl-5 text-center align-text-center\">No commands found... <i class=\"fas fa-sad-cry\"></i></div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<footer>\r\n  <waves></waves>\r\n</footer>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CommandsService } from '../../services/commands.service';\r\nimport { GuildService } from '../../services/guild.service';\r\nimport { kebabToCamelCase } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'app-commands',\r\n  templateUrl: './commands.component.html',\r\n  styleUrls: ['./commands.component.css']\r\n})\r\nexport class CommandsComponent implements OnInit {\r\n  commands = [];\r\n  displayedCommands = [];\r\n  modules = [\r\n    { name: \"action\", icon: \"far fa-location-arrow\" },\r\n    { name: \"autoMod\", icon: \"fa-gavel\" },\r\n    { name: \"economy\", icon: \"fa-dollar-sign\"},\r\n    { name: \"fun\", icon: \"fa-gamepad\" },\r\n    { name: \"general\", icon: \"fa-star\" },\r\n    { name: \"info\", icon: \"fa-info\" },\r\n    { name: \"leveling\", icon: \"fa-trophy\" },\r\n    { name: \"music\", icon: \"fa-music\" },\r\n  ];\r\n  selectedModule = '';\r\n  guild: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private service: CommandsService,\r\n    private guildService: GuildService) {}\r\n\r\n  async ngOnInit() {\r\n    await this.service.init();\r\n\r\n    this.commands = this.displayedCommands = [...this.service.commands];\r\n\r\n    document.title = 'Neko - Commands';\r\n\r\n    const guildId = this.route.snapshot.queryParamMap.get('guild_id');\r\n    if (guildId) {\r\n      const { guild, commands } = await this.guildService.getCommands(guildId);\r\n      const customCommands = commands\r\n        .filter(c => c.alias && c.command)\r\n        ?.map(c => ({\r\n          name: c.alias,\r\n          module: 'Custom',\r\n          summary: c.command,\r\n          usage: c.alias,\r\n          anywhere: c.anywhere\r\n        }));\r\n\r\n      this.displayedCommands.push(...customCommands);\r\n      this.guild = guild;\r\n    }\r\n    this.setModule('action');\r\n  }\r\n\r\n  setModule(name: string) {\r\n    this.selectedModule = name;\r\n    this.displayedCommands = this.commands\r\n      .filter(c => kebabToCamelCase(c.module) === name)\r\n      .sort((a, b) => (a.name > b.name) ? 1 : -1);\r\n  }\r\n\r\n  search(query: string) {\r\n    const empty = query.trim().length <= 0;\r\n    if (empty)\r\n      return this.setModule(this.modules[0].name);\r\n\r\n    this.displayedCommands = this.service.search(query);\r\n    this.selectedModule = '';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { GuildService } from '../services/guild.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GuildAuthGuard implements CanActivate {\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private router: Router,\r\n    private userService: UserService) {}\r\n\r\n  async canActivate(\r\n    next: ActivatedRouteSnapshot) {\r\n      await this.userService.init();\r\n      await this.guildService.init();\r\n\r\n      const guildId = next.paramMap.get('id');                \r\n      this.guildService.singleton = next.data =\r\n        (guildId === this.guildService.singleton?.guildId) \r\n          ? this.guildService.singleton : {\r\n            guildId,\r\n            channels: await this.guildService.getChannels(guildId),\r\n            roles: await this.guildService.getRoles(guildId),\r\n            savedGuild: await this.guildService.getSavedGuild(guildId)\r\n          };\r\n          \r\n      const canActivate = this.guildService.guilds?.some(g => g.id === guildId); \r\n      //if (!canActivate)\r\n      //  this.router.navigate(['/dashboard']);\r\n\r\n      return true; //canActivate\r\n  }  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from './services/user.service';\r\nimport { CommandsService } from './services/commands.service';\r\nimport { ThemeService } from './services/theme.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private commandService: CommandsService,\r\n    private themeService: ThemeService,\r\n    private userService: UserService) {}\r\n\r\n  async ngOnInit() {\r\n    this.themeService.updateTheme();\r\n\r\n    await this.commandService.updateCommands();\r\n    await this.userService.updateUser();\r\n  } \r\n}\r\n","<router-outlet></router-outlet>","<navbar></navbar>\r\n<waves inverted=\"true\"></waves>\r\n\r\n<div class=\"container jumbrotron text-center\">\r\n  <h1 class=\"display-3\">Stats</h1>\r\n  <p class=\"lead\">View the statistics of Neko, updated every 30 minutes.</p>\r\n</div>\r\n\r\n<section *ngIf=\"stats\"\r\n  class=\"container\">\r\n  <div class=\"row color-heading\">\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"stats cursor-pointer\"\r\n          matTooltip=\"The total commands executed.\">\r\n          <i class=\"fa fa-code\" aria-hidden=\"true\"></i>\r\n          Ran {{ stats.general.commandsExecuted | number }} Commands\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"stats cursor-pointer\"\r\n          matTooltip=\"The total customizable guild config properties updated.\">\r\n          <i class=\"fas fa-save\"></i>\r\n          {{ stats.general.inputsChanged | number }} Updated Inputs\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"stats cursor-pointer\"\r\n          matTooltip=\"The total customizable guild config properties.\">\r\n          <i class=\"fas fa-cogs\"></i>\r\n          {{ stats.general.inputsCount | number }} Total Inputs\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"stats cursor-pointer\"\r\n          matTooltip=\"How big brain the bot is.\">\r\n          <i class=\"fas fa-lightbulb\"></i>\r\n          {{ stats.general.iq | number }} IQ\r\n        </div>\r\n      </div>\r\n  </div>\r\n  <hr>\r\n  <div class=\"row\">\r\n      <div class=\"col-lg-6 col-sm-12\">\r\n          <div class=\"large stats\">\r\n            <popular-inputs-graph [stats]=\"stats\"></popular-inputs-graph>\r\n          </div>\r\n      </div>\r\n      <div class=\"col-lg-6 col-sm-12\">\r\n          <div class=\"large stats\">\r\n            <popular-inputs-graph [stats]=\"stats\" [reversed]=\"true\"></popular-inputs-graph>\r\n          </div>\r\n      </div>\r\n      <div class=\"col-lg-6 col-sm-12\">\r\n          <div class=\"large stats\">\r\n            <popular-commands-graph></popular-commands-graph>\r\n          </div>\r\n      </div>\r\n      <div class=\"col-lg-6 col-sm-12\">\r\n          <div class=\"large stats\">\r\n            <popular-commands-graph [stats]=\"stats\" [reversed]=\"true\"></popular-commands-graph>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-stats',\r\n  templateUrl: './stats.component.html',\r\n  styleUrls: ['./stats.component.css']\r\n})\r\nexport class StatsComponent implements OnInit {\r\n  stats: any;\r\n\r\n  constructor(private api: ApiService) {}\r\n\r\n  async ngOnInit() {\r\n    this.stats = await this.api.getStats();\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ThemeService {\r\n  readonly defaultTheme = 'NEKO';\r\n\r\n  changeTheme(theme: string) {\r\n    localStorage.setItem('theme', theme);\r\n\r\n    this.updateTheme();\r\n  }\r\n\r\n  updateTheme() {\r\n    const theme = localStorage.getItem('theme') ?? this.defaultTheme;\r\n    document.querySelector('html').setAttribute('theme', theme);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'snakeToSentenceCase'\r\n})\r\nexport class SnakeToSentenceCasePipe implements PipeTransform {\r\n  transform(words: string) {\r\n    return words\r\n      ?.split('_')\r\n      .map(w => w[0] + w.slice(1).toLowerCase())\r\n      .join(' ') ?? '';\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ErrorHandler, Injectable } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ShowOnDirtyErrorStateMatcher, ErrorStateMatcher } from '@angular/material/core';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { CommandsComponent } from './pages/commands/commands.component';\r\nimport { AuthComponent } from './pages/auth/auth/auth.component';\r\nimport { LoginComponent } from './pages/auth/login/login.component';\r\nimport { InviteComponent } from './pages/auth/invite/invite.component';\r\nimport { LogoutComponent } from './pages/auth/logout/logout.component';\r\nimport { DashboardOverviewComponent } from './dashboard/dashboard/dashboard-overview/dashboard-overview.component';\r\nimport { SidebarComponent } from './dashboard/sidebar/sidebar.component';\r\nimport { GuildComponent } from './dashboard/guild/guild/guild.component';\r\nimport { SpinnerComponent } from './utils/spinner/spinner.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LogsModuleComponent } from './dashboard/guild/logs-module/logs-module.component';\r\nimport { AutoModModuleComponent } from './dashboard/guild/auto-mod-module/auto-mod-module.component';\r\nimport { GeneralModuleComponent } from './dashboard/guild/general-module/general-module.component';\r\nimport { MusicModuleComponent } from './dashboard/guild/music-module/music-module.component';\r\nimport { LogModuleComponent } from './dashboard/guild/log-module/log-module.component';\r\nimport { SettingsModuleComponent } from './dashboard/dashboard/settings-module/settings-module.component';\r\nimport { LevelingModuleComponent } from './dashboard/guild/leveling-module/leveling-module.component';\r\nimport { GuildSidebarComponent } from './dashboard/guild/guild-sidebar/guild-sidebar.component';\r\nimport { LeaderboardModuleComponent } from './dashboard/guild/leaderboard-module/leaderboard-module.component';\r\nimport { XPCardComponent } from './xp-card/xp-card.component';\r\nimport { DashboardSidebarComponent } from './dashboard/dashboard/dashboard-sidebar/dashboard-sidebar.component';\r\nimport { CustomizeXPCardComponent } from './dashboard/dashboard/customize-xp-card/customize-xp-card.component';\r\nimport { MaterialModule } from './material-module';\r\nimport { PremiumDirective } from './dashboard/directives/premium.directive';\r\nimport { SaveChangesComponent } from './utils/discord/save-changes/save-changes.component';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\nimport { PaymentSuccessComponent } from './pages/payment-success/payment-success.component';\r\nimport { PlusComponent } from './pages/plus/plus/plus.component';\r\nimport { CleanDateTimePipe } from './pipes/clean-date-time.pipe';\r\nimport { MemberUsernameComponent } from './utils/discord/member-username/member-username.component';\r\nimport { ZippyComponent } from './zippy/zippy.component';\r\nimport { AuditLogWidgetComponent } from './dashboard/widgets/audit-log-widget/audit-log-widget.component';\r\nimport { CommandsWidgetComponent } from './dashboard/widgets/commands-widget/commands-widget.component';\r\nimport { MiniDatePipe } from './pipes/mini-date.pipe';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SnakeToSentenceCasePipe } from './pipes/snake-to-sentence-case.pipe';\r\nimport { TruncatedPipe } from './pipes/truncated.pipe';\r\nimport { DurationStringPipe } from './pipes/duration-string.pipe';\r\nimport { CamelToSentenceCasePipe } from './pipes/camel-to-sentence-case.pipe';\r\nimport { MessagePreviewComponent } from './utils/discord/message-preview/message-preview.component';\r\nimport { ReactionRolesModuleComponent } from './dashboard/dashboard/reaction-roles-module/reaction-roles-module.component';\r\nimport { PlusCardComponent } from './pages/plus/plus-card/plus-card.component';\r\nimport { PlusPaywallComponent } from './utils/plus-paywall/plus-paywall.component';\r\nimport { PlusBadgeComponent } from './utils/plus-badge/plus-badge.component';\r\nimport { StatsComponent } from './stats/stats.component';\r\nimport { PopularInputsGraphComponent } from './stats/popular-inputs-graph/popular-inputs-graph.component';\r\nimport { PopularCommandsGraphComponent } from './stats/popular-commands-graph/popular-commands-graph.component';\r\nimport { WavesComponent } from './utils/waves/waves.component';\r\nimport { WarningsModuleComponent } from './dashboard/guild/warnings-module/warnings-module.component';\r\nimport { WarningsWidgetComponent } from './dashboard/guild/warnings-widget/warnings-widget.component';\r\nimport { EmbedComposeModuleComponent } from './dashboard/guild/compose-embed-module/compose-embed.component';\r\nimport { MessageEmbedPreviewComponent } from './utils/discord/message-embed-preview/message-embed-preview.component';\r\nimport { CaptchaModuleComponent } from './dashboard/guild/captcha-module/captcha-module.component';\r\n\r\n@Injectable()\r\nexport class AlertErrorHandler implements ErrorHandler {\r\n  async handleError(error: Error | any) {\r\n    try {\r\n      console.log(error?.rejection?.error ?? error?.message ?? error);\r\n\r\n      const key = localStorage.getItem('key');\r\n      await fetch(`${environment.endpoint}/error?key=${key}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: error.message })\r\n      });\r\n    } finally {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    CommandsComponent,\r\n    AuthComponent,\r\n    LoginComponent,\r\n    InviteComponent,\r\n    LogoutComponent,\r\n    DashboardOverviewComponent,\r\n    SidebarComponent,\r\n    GuildComponent,\r\n    SpinnerComponent,\r\n    AutoModModuleComponent,\r\n    GeneralModuleComponent,\r\n    MusicModuleComponent,\r\n    LevelingModuleComponent,\r\n    SettingsModuleComponent,\r\n    LevelingModuleComponent,\r\n    GuildSidebarComponent,\r\n    LeaderboardModuleComponent,\r\n    XPCardComponent,\r\n    CustomizeXPCardComponent,\r\n    DashboardSidebarComponent,\r\n    PremiumDirective,\r\n    NotFoundComponent,\r\n    PaymentSuccessComponent,\r\n    PlusComponent,\r\n    CleanDateTimePipe,\r\n    MemberUsernameComponent,\r\n    ZippyComponent,\r\n    AuditLogWidgetComponent,\r\n    CommandsWidgetComponent,\r\n    MiniDatePipe,\r\n    SnakeToSentenceCasePipe,\r\n    TruncatedPipe,\r\n    DurationStringPipe,\r\n    CamelToSentenceCasePipe,\r\n    LogModuleComponent,\r\n    LogsModuleComponent,\r\n    ReactionRolesModuleComponent,\r\n    PlusCardComponent,\r\n    PlusPaywallComponent,\r\n    PlusBadgeComponent,\r\n    StatsComponent,\r\n    PopularInputsGraphComponent,\r\n    PopularCommandsGraphComponent,\r\n    WavesComponent,\r\n    WarningsModuleComponent,\r\n    WarningsWidgetComponent,\r\n    MemberUsernameComponent,\r\n    MessagePreviewComponent,\r\n    SaveChangesComponent,\r\n    MemberUsernameComponent,\r\n    EmbedComposeModuleComponent,\r\n    MessageEmbedPreviewComponent,\r\n    CaptchaModuleComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    HighlightModule,\r\n    ChartsModule,\r\n    ColorPickerModule,\r\n  ],\r\n  exports: [PremiumDirective],\r\n  providers: [\r\n    { provide: ErrorHandler, useClass: AlertErrorHandler },\r\n    { provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher },\r\n    { provide: HIGHLIGHT_OPTIONS, useValue: { languages: getHighlightLanguages() } }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n\r\nfunction getHighlightLanguages() {\r\n  return {\r\n    json: () => import('highlight.js/lib/languages/json')\r\n  };\r\n}\r\n","import { style, state, trigger, animate, transition } from '@angular/animations';\r\n\r\nexport const expandCollapse = trigger('expandCollapse', [\r\n    state('collapsed', style({\r\n        height: 0,\r\n        padding: '0 20px'\r\n    })),\r\n    state('expanded', style({ height: '*' })),\r\n    transition('collapsed <=> expanded', [ animate('200ms ease') ])\r\n]);","export const environment = {\r\n  production: true,\r\n  discordInvite: 'https://discord.gg/NyxuUKVha7',\r\n  endpoint: '/api',\r\n  CLIENT_SECRET: 'fv6nqPabWe7EyxSFbFsnq3v6SPXe6Jy9',\r\n  version: 'v0.1.0b',\r\n  botOwnerId: '372099126583754753',\r\n  guildId: '1008663587713191986'\r\n};\r\n","<div class=\"row\">\r\n  <div class=\"col-md-3\">\r\n    <h5>{{ reversed ? 'Least' : 'Most' }} Popular Inputs</h5>\r\n  </div>\r\n  <div class=\"col-md-9\">\r\n      <canvas *ngIf=\"chartReady\" baseChart\r\n          [datasets]=\"barChartData\"\r\n          [labels]=\"barChartLabels\"\r\n          [options]=\"barChartOptions\"\r\n          [plugins]=\"barChartPlugins\"\r\n          [legend]=\"barChartLegend\"\r\n          [chartType]=\"barChartType\">\r\n      </canvas>\r\n  </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport pluginDataLabels from 'chartjs-plugin-datalabels';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'popular-inputs-graph',\r\n  templateUrl: './popular-inputs-graph.component.html',\r\n  styleUrls: ['./popular-inputs-graph.component.css']\r\n})\r\nexport class PopularInputsGraphComponent implements OnInit {\r\n  @Input() stats: any;\r\n  @Input() reversed = false;\r\n\r\n  chartReady = false;\r\n  \r\n  barChartOptions: ChartOptions = {\r\n    responsive: false,\r\n    scales: {\r\n      yAxes: [{ display: false }],\r\n      xAxes: [{ display: false }]\r\n    },\r\n    plugins: {\r\n      datalabels: { anchor: 'end', align: 'end' }\r\n    }\r\n  };\r\n  barChartLabels = [];\r\n  barChartType: ChartType = 'bar';\r\n  barChartLegend = true;\r\n  barChartPlugins = [pluginDataLabels];\r\n\r\n  barChartData: ChartDataSets[] = [];\r\n\r\n  constructor(private api: ApiService) {}\r\n    \r\n  async ngOnInit() {\r\n    this.stats = this.stats ?? await this.api.getStats();\r\n\r\n    this.barChartLabels = this.buildLabels();\r\n    this.barChartData = this.buildDataSets();\r\n    \r\n    this.chartReady = true;\r\n  }\r\n\r\n  buildLabels() {\r\n    const labels = this.stats.inputs\r\n      .map(c => c.path)\r\n      .splice(0, 10);\r\n    return (this.reversed) ? labels.reverse() : labels;\r\n  }\r\n\r\n  buildDataSets() {\r\n    const data = this.stats.inputs.map(s => s.count);\r\n    const sets = [\r\n      {\r\n        data: (this.reversed) ? data.reverse() : data,\r\n        label: 'Inputs'\r\n      }\r\n    ];\r\n    return (this.reversed) ? sets.reverse() : sets;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncated'\r\n})\r\nexport class TruncatedPipe implements PipeTransform {\r\n\r\n  transform(words: string, max: number) {\r\n    return words.substring(0, max) + '...';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PayService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  payURL(plan: number) {\r\n    const key = localStorage.getItem('key');\r\n    return `${environment.endpoint}/pay?key=${key}&plan=${plan}`;\r\n  }\r\n}","\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-plus-card',\r\n  templateUrl: './plus-card.component.html',\r\n  styleUrls: ['./plus-card.component.css']\r\n})\r\nexport class PlusCardComponent {\r\n  @Input() duration: string;\r\n  @Input() price: number;\r\n  @Output() checkout = new EventEmitter();\r\n\r\n  constructor(\r\n    public userService: UserService\r\n  ) {}\r\n}\r\n","<section class=\"price-sec\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"price-table\">\r\n            <div class=\"card text-center\">\r\n              <div class=\"title\">\r\n                <i class=\"fas fa-plus\"></i>\r\n                <h2>{{ duration }}</h2>\r\n              </div>\r\n              <div class=\"price\">\r\n                <h4>\r\n                  <h5 class=\"text-secondary mb-0\"><del>{{ price * 1.5 | currency }}</del></h5>\r\n                  <sup>$</sup>{{ price }}\r\n                </h4>\r\n              </div>\r\n              <div class=\"option\">\r\n                <ul>\r\n                  <li><i class=\"fas fa-check\"></i> Full XP Card Customization</li>\r\n                  <li><i class=\"fas fa-check\"></i> Music - Additional Music Features</li>\r\n                  <li><i class=\"fas fa-check\"></i> Features - Features Added Weekly</li>\r\n                </ul>\r\n              </div>\r\n              <button\r\n                *ngIf=\"userService.user && userService.savedUser?.premium\"\r\n                (click)=\"checkout.emit()\"\r\n                class=\"checkout my-3 bg-warning\"\r\n                mat-button>\r\n                <i class=\"fab fa-paypal\"></i> Buy Again\r\n              </button>\r\n              <button\r\n                *ngIf=\"userService.user && !userService.savedUser?.premium\"\r\n                (click)=\"checkout.emit()\"\r\n                class=\"checkout my-3 bg-warning\"\r\n                mat-button>\r\n                <i class=\"fab fa-paypal\"></i> Buy\r\n              </button>\r\n              <button\r\n                *ngIf=\"!userService.user\"\r\n                routerLink=\"/login\"\r\n                class=\"checkout my-3\"\r\n                color=\"success\"\r\n                mat-button>\r\n                <i class=\"fas fa-user-alt\"></i> Login to Buy</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { SaveChangesComponent } from './utils/discord/save-changes/save-changes.component';\r\nimport { GuildService } from './services/guild.service';\r\nimport {  OnDestroy, Directive } from '@angular/core';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Subscription } from 'rxjs';\r\n\r\n// TODO: Add Angular decorator.\r\n@Directive()\r\nexport abstract class ModuleConfig implements OnDestroy {\r\n  abstract moduleName: string;\r\n\r\n  form: FormGroup;\r\n\r\n  savedGuild: any;\r\n  guild: any;\r\n  originalSavedGuild: any;\r\n\r\n  channels: any = [];\r\n  textChannels: any = [];\r\n  roles: any = [];\r\n\r\n  get guildId() { return this.route.snapshot.paramMap.get('id'); }\r\n  get routeName() { return this.route.snapshot.url[2].path; }\r\n\r\n  private saveChanges$: Subscription;  \r\n  private valueChanges$: Subscription;  \r\n  \r\n  constructor(\r\n    protected guildService: GuildService,\r\n    protected route: ActivatedRoute,\r\n    public saveChanges: MatSnackBar) {}\r\n\r\n  /**\r\n   * Load all required data for the form, and hook events.\r\n   */\r\n  async init() {\r\n    const data = this.route.snapshot.data;\r\n    \r\n    this.guild = this.guildService.guilds.find(g => g.id === this.guildId);\r\n\r\n    this.roles = data.roles;\r\n    this.channels = data.channels;\r\n\r\n\r\n    this.textChannels = data.channels.filter(c => c.type === 'GUILD_TEXT');\r\n\r\n\r\n    this.savedGuild = data.savedGuild;\r\n    this.originalSavedGuild = JSON.parse(JSON.stringify(this.savedGuild));\r\n    \r\n    await this.resetForm();\r\n\r\n    this.valueChanges$ = this.form.valueChanges\r\n      .subscribe(() => this.openSaveChanges());   \r\n  }\r\n\r\n  private async resetForm() {   \r\n    this.savedGuild = JSON.parse(JSON.stringify(this.originalSavedGuild));   \r\n    this.form = await this.buildForm(this.savedGuild);\r\n    this.form.addControl('enabled',\r\n      new FormControl(this.savedGuild[this.moduleName]?.enabled));\r\n  }\r\n\r\n  /**\r\n   * Build the form to be used.\r\n   * Called when on form init.\r\n   */\r\n  abstract buildForm(savedGuild: any): FormGroup | Promise<FormGroup>;\r\n  \r\n  private openSaveChanges() {\r\n    const snackBarRef = this.saveChanges._openedSnackBarRef;\r\n    if (!this.form.valid || snackBarRef || this.routeName == 'embed') return;\r\n\r\n    this.saveChanges$ = this.saveChanges.openFromComponent(SaveChangesComponent).afterOpened()\r\n    .subscribe(() => {\r\n      const component = this.saveChanges._openedSnackBarRef.instance as SaveChangesComponent;\r\n      component.onSave.subscribe(async() => await this.submit());\r\n      component.onReset.subscribe(async() => await this.reset());\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Clean up subscriptions - to prevent memory leak.\r\n   */  \r\n  ngOnDestroy() {    \r\n    this.valueChanges$?.unsubscribe();\r\n    this.saveChanges$?.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Send the form data to the API.\r\n   */\r\n  async submit() {\r\n    console.log(this.form.value);\r\n    try {\r\n      if (this.form.invalid) return;\r\n\r\n      await this.guildService.saveGuild(this.guildId, this.moduleName, this.form.value);\r\n      this.guildService.singleton.savedGuild[this.moduleName] = this.form.value;\r\n    } catch(e) {\r\n      console.error(e.message);\r\n      alert('An error occurred when submitting the form - check console');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset form values, and rebuild form.\r\n   */\r\n  async reset() {\r\n    await this.resetForm();\r\n    this.savedGuild = JSON.parse(JSON.stringify(this.originalSavedGuild));\r\n    \r\n    this.form.valueChanges\r\n      .subscribe(() => this.openSaveChanges()); \r\n  }\r\n\r\n  // input events\r\n\r\n  add(event: MatChipInputEvent, array: any[]) {    \r\n    const { value, input } = event;\r\n  \r\n    if ((value || '').trim())\r\n      array.push(value.trim());\r\n  \r\n    if (input) \r\n      input.value = '';\r\n\r\n    this.openSaveChanges();\r\n  }\r\n  \r\n  remove(item: any, array: any[]) {\r\n    const index = array.indexOf(item);\r\n    if (index >= 0)\r\n      array.splice(index, 1);\r\n    \r\n    this.openSaveChanges();\r\n  }\r\n\r\n  getChannel(id: string) {\r\n    return this.channels.find(c => c.id === id);\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"spinner\"></div>","import {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {ColorPickerModule} from 'ngx-color-picker';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  exports: [\r\n    ColorPickerModule,\r\n    CdkTableModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatRippleModule,\r\n    MatSortModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n/**  Copyright 2019 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","<nav class=\"navbar navbar-expand navbar-dark\" [style.background-color]=\"!bg ? 'rgba(0, 0, 0, 0.34)' : 'rgba(254, 134, 135, 0.34)' \">\r\n  <a class=\"navbar-brand\" routerLink=\"/\">\r\n      <img src=\"/assets/img/server-icon.png\" alt=\"\">\r\n  </a>\r\n  <div class=\"nav navbar-nav\">\r\n    <a class=\"nav-item nav-item-hover nav-link\"\r\n      [href]=\"environment.discordInvite\">\r\n      <h2>Join on Discord</h2>\r\n    </a>\r\n    <a class=\"nav-item nav-item-hover nav-link\"\r\n      routerLink=\"/plus\"\r\n      routerLinkActive=\"active\">\r\n      <h2>Donate</h2>\r\n    </a>\r\n    <a class=\"nav-item nav-item-hover nav-link\" routerLink=\"/commands\" routerLinkActive=\"active\">\r\n      <h2>Rules</h2>\r\n    </a>\r\n    <a class=\"nav-item nav-item-hover nav-link\" routerLink=\"/commands\" routerLinkActive=\"active\">\r\n      <h2>Commands</h2>\r\n    </a>\r\n  </div>\r\n  <div class=\"nav navbar-nav ml-auto\">\r\n    <div *ngIf=\"!user\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/login\">\r\n        <div class=\"login\">\r\n          <i class=\"fa fa-user\" style=\"color: white;\" aria-hidden=\"true\"></i>\r\n          <h2>Login</h2>\r\n        </div>\r\n      </a>\r\n    </div>\r\n    <div *ngIf=\"user\">\r\n      <div class=\"dropdown user\">\r\n        <a class=\"nav-item nav-link\"\r\n          data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" style=\"color: white; font-size: 18px; font-weight: bold;\">\r\n          <img [src]=\"user.displayAvatarURL\" style=\"width: 42px;\"> {{ user.username }}\r\n          <i class=\"fas fa-chevron-down\" style=\"font-size: 16px;\"></i>\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" style=\" border-radius: 20px; \">\r\n          <a class=\"dropdown-item\" routerLink=\"/dashboard\"\r\n            routerLinkActive=\"active\">\r\n            <i class=\"fas fa-cog\"></i> Dashboard</a>\r\n          <a *ngIf=\"user?.id === environment.botOwnerId\"\r\n            class=\"dropdown-item\" routerLink=\"/stats\" routerLinkActive=\"active\"\r\n            matTooltip=\"Only bot owners can see this.\">\r\n            <i class=\"fas fa-chart-line\" aria-hidden=\"true\"></i> Bot Stats\r\n          </a>\r\n          <hr class=\"m-1\">\r\n          <a class=\"dropdown-item\" routerLink=\"/logout\">\r\n          <i class=\"fas fa-sign-out-alt\"></i> Logout</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  @Input() bg = \"\";\r\n  environment = environment;\r\n\r\n  get user() { return this.userService.user; }\r\n\r\n  constructor(private userService: UserService) {}\r\n\r\n  /*Hello() {\r\n    alert('Hewo')\r\n  }\r\n\r\n      <div id=\"test\">\r\n      <a class=\"nav-item nav-link\"\r\n      matTooltip=\"Code\" (click)=\"Hello()\">\r\n      <i class=\"fas fa-qrcode\"></i>\r\n      </a>\r\n    </div>\r\n  */\r\n\r\n  async ngOnInit() {\r\n    await this.userService.init();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'dashboard-sidebar',\r\n  templateUrl: './dashboard-sidebar.component.html',\r\n  styleUrls: ['./dashboard-sidebar.component.css']\r\n})\r\nexport class DashboardSidebarComponent implements OnInit {\r\n\r\n  \r\n  get user() { return this.userService.user ?? {}; }\r\n  get SavedUser() { return this.userService.savedUser ?? {}; }\r\n\r\n  constructor(\r\n    private userService: UserService) {\r\n    document.title = 'Neko - Dashboard';\r\n  }\r\n  ngOnInit(): void {}\r\n}\r\n","<sidebar>\r\n    <div id=\"content\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</sidebar>","<guild-sidebar [waitFor]=\"savedGuild\">\r\n    <div *ngIf=\"form\" class=\"container\">\r\n      <form #f=\"ngForm\" [formGroup]=\"form\">\r\n        <div>\r\n          <div class=\"d-flex justify-content-between\">\r\n            <h1 routerLink=\"/docs/auto-mod\"\r\n              class=\"display-3\">Auto-mod</h1>\r\n            <mat-slide-toggle formControlName=\"enabled\"\r\n              class=\"float-right mt-5\"></mat-slide-toggle>\r\n          </div>\r\n        </div>\r\n        <hr>\r\n  \r\n        <h3>Filters</h3>\r\n        <p class=\"desc\">Filter message content, based on specific conditions</p>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-4 col-sm-6\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Enabled Filters</mat-label>\r\n              <mat-select multiple\r\n                formControlName=\"filters\">\r\n                <mat-option *ngFor=\"let filter of filters\" \r\n                  [value]=\"filter\">{{ filter | snakeToSentenceCase }}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"ml-4\">\r\n            <label class=\"pr-1\">Filter Threshold</label>\r\n            <mat-slider formControlName=\"filterThreshold\"\r\n              step=\"1\" tickInterval=\"1\" thumbLabel min=\"1\" max=\"20\"></mat-slider>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <div class=\"col-lg-4 col-sm-6\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Ban Words</mat-label>\r\n              <mat-chip-list formControlName=\"banWords\"\r\n                #banWords aria-label=\"Ban word selection\">\r\n                <mat-chip *ngFor=\"let word of savedGuild.autoMod.banWords\" selectable\r\n                    removable (removed)=\"remove(word, savedGuild.autoMod.banWords)\">\r\n                  {{ word }}\r\n                  <mat-icon matChipRemove>x</mat-icon>\r\n                </mat-chip>\r\n                <input placeholder=\"New word...\"\r\n                    [matChipInputFor]=\"banWords\"\r\n                    matChipInputAddOnBlur\r\n                    (matChipInputTokenEnd)=\"add($event, savedGuild.autoMod.banWords)\">\r\n              </mat-chip-list>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-lg-4 col-sm-6\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Ban Links</mat-label>\r\n              <mat-chip-list #banLinks aria-label=\"Ban link selection\">\r\n                <mat-chip *ngFor=\"let link of savedGuild.autoMod.banLinks\" selectable\r\n                    removable (removed)=\"remove(link, savedGuild.autoMod.banLinks)\">\r\n                  {{ link }}\r\n                  <mat-icon matChipRemove>x</mat-icon>\r\n                </mat-chip>\r\n                <input placeholder=\"New link...\"\r\n                    [matChipInputFor]=\"banLinks\"\r\n                    matChipInputAddOnBlur\r\n                    (matChipInputTokenEnd)=\"add($event, savedGuild.autoMod.banLinks)\">\r\n              </mat-chip-list>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-lg-4 col-sm-6\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Ignored Roles</mat-label>\r\n              <mat-select multiple\r\n                formControlName=\"ignoredRoles\">\r\n                <mat-option *ngFor=\"let role of roles\" \r\n                [value]=\"role.id\"\r\n                [style.color]=\"'#' + role.color?.toString(16)\">@{{ role.name }}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-lg-4 col-sm-6\">\r\n            <label class=\"pr-1\">Auto-warn Users</label>\r\n            <mat-checkbox formControlName=\"autoWarnUsers\"></mat-checkbox>\r\n          </div>\r\n          <div class=\"col-lg-4 col-sm-6\">\r\n            <label class=\"pr-1\">Auto-delete Messages</label>\r\n            <mat-checkbox formControlName=\"autoDeleteMessages\"></mat-checkbox>\r\n          </div>\r\n        </div>\r\n        <hr>\r\n      </form>\r\n    </div>\r\n  </guild-sidebar>","import { Component, OnInit } from '@angular/core';\r\nimport { ModuleConfig } from '../../../module-config';\r\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { GuildService } from '../../../services/guild.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { toIterable } from 'src/app/utils';\r\n\r\n@Component({\r\n  selector: 'app-auto-mod-module',\r\n  templateUrl: './auto-mod-module.component.html',\r\n  styleUrls: ['./auto-mod-module.component.css']\r\n})\r\nexport class AutoModModuleComponent extends ModuleConfig implements OnInit {\r\n  maxRules = toIterable(4);\r\n  filters = [ MessageFilter.Links, MessageFilter.Words, MessageFilter.MassMention, MessageFilter.MassCaps ];\r\n  moduleName = 'autoMod';\r\n\r\n  constructor(\r\n    guildService: GuildService,\r\n    route: ActivatedRoute,\r\n    saveChanges: MatSnackBar) {\r\n    super(guildService, route, saveChanges);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await super.init();\r\n  }\r\n  \r\n  buildForm({ autoMod }: any) {\r\n    const form = new FormGroup({\r\n      banWords: new FormControl([]),\r\n      banLinks: new FormControl([]),\r\n      enabled: new FormControl(true),\r\n      filters: new FormControl([]),\r\n      autoDeleteMessages: new FormControl(true),\r\n      autoWarnUsers: new FormControl(false),\r\n      ignoredRoles: new FormControl([]),\r\n      filterThreshold: new FormControl(5, [ Validators.min(1), Validators.max(20) ]),\r\n      punishments: new FormArray(\r\n        new Array(this.maxRules.length).fill(\r\n          new FormGroup({\r\n            type: new FormControl(''),\r\n            warnings: new FormControl(5, [ Validators.min(1), Validators.max(100) ]),\r\n            minutes: new FormControl(5, [ Validators.min(1), Validators.max(60) ])\r\n          }), 0, this.maxRules.length\r\n        )\r\n      )\r\n    });\r\n    form.patchValue(autoMod);\r\n    return form;\r\n  }\r\n}\r\n\r\nexport enum MessageFilter {\r\n  Links = 'LINKS',\r\n  MassCaps = 'MASS_CAPS',\r\n  MassMention = 'MASS_MENTION',\r\n  Words = 'WORDS',\r\n  Toxicity = 'TOXICITY',\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { GuildService } from '../../services/guild.service';\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\n\r\n@Component({\r\n  selector: 'sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  @ViewChild('drawer') drawer: MatDrawer;\r\n\r\n  get guilds() { return this.guildService.guilds || []; }\r\n  get user() { return this.userService.user || {}; }\r\n\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private userService: UserService) {}\r\n\r\n  async ngOnInit() {\r\n    if (this.guildService.guilds.length <= 0)\r\n      await this.guildService.updateGuilds();\r\n  }\r\n\r\n  toggle() {\r\n    const icon = document.querySelector('#nav-icon1');\r\n    icon.classList.toggle('open');\r\n    this.drawer.toggle();\r\n  }\r\n\r\n  identify(index, guild){\r\n    return guild.id; \r\n  }\r\n}","<mat-sidenav-container fullscreen class=\"phoneSidebar\">\r\n  <mat-sidenav #drawer mode=\"side\" opened class=\"phoneSidebar\">\r\n    <!--\r\n      <div class=\"guilds px-2\">\r\n      <div class=\"user\">\r\n        <div routerLink=\"/dashboard\" class=\"guild-icon\">\r\n          <img [src]=\"user.displayAvatarURL\" alt=\"{{ user.username }}\">\r\n        </div>\r\n        <hr class=\"guild-seperator\">\r\n      </div>\r\n      <div *ngFor=\"let guild of guilds\" [routerLink]=\"['/dashboard/admin/' + guild.id]\"\r\n        class=\"guild-icon\"\r\n        [matTooltip]=\"guild.name\">\r\n        <img *ngIf=\"guild.iconURL\"\r\n          [src]=\"guild.iconURL\" [alt]=\"guild.name\">\r\n        <span *ngIf=\"!guild.iconURL\"\r\n          class=\"d-flex justify-content-center\">{{ guild.nameAcronym }}</span>\r\n      </div>\r\n      <div routerLink=\"/invite\" \r\n        class=\"guild-icon invite\"\r\n        matTooltip=\"Add a Server\">\r\n        <span class=\"add-guild pt-1 d-flex justify-content-center flex-column\">+</span>\r\n      </div>\r\n    </div>\r\n    -->\r\n    <div class=\"options\">\r\n      <ng-content select=\".side-nav\"></ng-content>\r\n      <span (click)=\"toggle()\"\r\n        class=\"float-right d-sm-none d-block close\">&times;</span>\r\n    </div>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <navbar></navbar>\r\n    <button class=\"toggle\">\r\n      <div id=\"nav-icon1\" class=\"open\"\r\n        (click)=\"toggle()\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        </div>\r\n    </button>\r\n    <ng-content select=\"#content\" ></ng-content>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>","<guild-sidebar [waitFor]=\"savedGuild\">\r\n    <div *ngIf=\"form\" class=\"container\">\r\n      <form #f=\"ngForm\" [formGroup]=\"form\">\r\n        <div>\r\n          <div class=\"d-flex justify-content-between\">\r\n            <h1 class=\"display-3\">Embed Messages</h1>\r\n          </div>\r\n          <hr>\r\n        </div>\r\n        <div style=\"align-self: center; display: flex; justify-content: center; flex-direction: column; align-items:center;\">\r\n          <message-embed-preview [hidden]=\"disabled\" [embedAuthor]=\"author\" [embedImage]=\"image\" [footerText]=\"footerText\" [footerImage]=\"footerImage\" [description]=\"description\" [content]=\"message\" [guild]=\"guild\" [title]=\"title\" [color]=\"color\" style=\"width: 80%;\"></message-embed-preview>\r\n        \r\n          <div class=\"embedSelection\">\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"message\">Message Content <i [ngClass]=\" hidden.messageContent ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.messageContent = !hidden.messageContent\"></i></label>\r\n              <br [hidden]=\"!hidden.messageContent\">\r\n              <textarea class=\"form-control\" id=\"message\" rows=\"3\" formControlName=\"message\" [hidden]=\"hidden.messageContent\"\r\n                placeholder=\"Message Content\"></textarea>\r\n    \r\n              <label for=\"message\">Message Title <i [ngClass]=\" hidden.title ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.title = !hidden.title\"></i></label>\r\n              <br>\r\n              <mat-form-field appearance=\"outline\" [hidden]=\"hidden.title\">\r\n                <mat-label>Title</mat-label>\r\n                <input matInput\r\n                    formControlName=\"title\" type=\"text\">\r\n              </mat-form-field>\r\n              <br [hidden]=\"hidden.title\">\r\n              \r\n              <label for=\"message\">Message URL <i [ngClass]=\" hidden.url ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.url = !hidden.url\"></i></label>\r\n              <br [hidden]=\"!hidden.url\">\r\n              <input type=\"text\" class=\"form-control\" id=\"title\" formControlName=\"url\" [hidden]=\"hidden.url\"\r\n                placeholder=\"Message URL\">\r\n              \r\n              <label for=\"message\">Message Image <i [ngClass]=\" hidden.image ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.image = !hidden.image\"></i></label>\r\n              <br [hidden]=\"!hidden.image\">\r\n              <input type=\"text\" class=\"form-control\" id=\"embedImage\" formControlName=\"embedImage\" [hidden]=\"hidden.image\"\r\n                placeholder=\"Message Image\">\r\n    \r\n              <label for=\"message\">Message Color <i [ngClass]=\" hidden.color ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.color = !hidden.color\"></i></label>\r\n              <br [hidden]=\"!hidden.color\">\r\n              <input class=\"form-control\" [(colorPicker)]=\"color\" style=\"max-width: 200px;\" [hidden]=\"hidden.color\" cpPosition=\"bottom\"\r\n              [style.background]=\"color\" />\r\n    \r\n              <label for=\"message\">Message Description <i [ngClass]=\" hidden.description ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.description = !hidden.description\"></i></label>\r\n              <br [hidden]=\"!hidden.description\">\r\n              <textarea class=\"form-control\" id=\"description\" rows=\"3\" formControlName=\"description\" [hidden]=\"hidden.description\"\r\n                placeholder=\"Message Description\"></textarea>\r\n              \r\n              <label for=\"message\">Message Footer <i [ngClass]=\" hidden.footer.text ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.footer.text = !hidden.footer.text\"></i></label>\r\n              <br [hidden]=\"!hidden.footer.text\">\r\n              <textarea class=\"form-control\" id=\"footer\" rows=\"1\" formControlName=\"footer\" [hidden]=\"hidden.footer.text\"\r\n                placeholder=\"Message Footer\"></textarea>\r\n              \r\n              <label for=\"message\">Message Footer Image <i [ngClass]=\" hidden.footer.image ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.footer.image = !hidden.footer.image\"></i></label>\r\n              <br [hidden]=\"!hidden.footer.image\">\r\n              <input type=\"text\" class=\"form-control\" id=\"footerImage\" formControlName=\"footerImage\" [hidden]=\"hidden.footer.image\"\r\n                placeholder=\"Message Footer Image\">\r\n              \r\n              <label for=\"message\">Message Author Image <i [ngClass]=\" hidden.author.image ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.author.image = !hidden.author.image\"></i></label>\r\n              <br [hidden]=\"!hidden.author.image\">\r\n              <input type=\"text\" class=\"form-control\" id=\"AuthorImage\" formControlName=\"authorImage\" [hidden]=\"hidden.author.image\"\r\n                placeholder=\"Message Author Image\">\r\n              \r\n              <label for=\"message\">Message Author URL <i [ngClass]=\" hidden.author.url ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.author.url = !hidden.author.url\"></i></label>\r\n              <br [hidden]=\"!hidden.author.url\">\r\n              <input type=\"text\" class=\"form-control\" id=\"AuthorURL\" formControlName=\"authorUrl\" [hidden]=\"hidden.author.url\"\r\n                placeholder=\"Message Author URL\">\r\n              \r\n              <label for=\"message\">Message Author <i [ngClass]=\" hidden.author.text ? 'fas fa-plus' : 'fas fa-minus' \" (click)=\"hidden.author.text = !hidden.author.text\"></i></label>\r\n              <br [hidden]=\"!hidden.author.text\">\r\n              <input type=\"text\" class=\"form-control\" id=\"AuthorName\" formControlName=\"authorName\" [hidden]=\"hidden.author.text\"\r\n                placeholder=\"Message Author Name\">\r\n            </div>\r\n\r\n            <div class=\"embedSending\">\r\n              <div class=\"sendEmbed\" (click)=\"send()\">\r\n                <h2 class=\"sendEmbedText\">Send</h2>\r\n              </div>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"channelSelection\">\r\n                <mat-label>Channel</mat-label>\r\n                <mat-select formControlName=\"channel\">\r\n                    <mat-option *ngFor=\"let channel of textChannels\" \r\n                        [value]=\"channel.id\">#{{ channel.name }}\r\n                        <span class=\"float-right text-muted\">[{{ getChannel(channel.parentId)?.name || 'N/A' }}]</span>\r\n                    </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </guild-sidebar>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GuildService } from '../../../services/guild.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ModuleConfig } from '../../../module-config';\r\n\r\n@Component({\r\n  selector: 'embed-compose-module',\r\n  templateUrl: './compose-embed.component.html',\r\n  styleUrls: ['./compose-embed.component.css'],\r\n})\r\nexport class EmbedComposeModuleComponent extends ModuleConfig implements OnInit {\r\n  levelRoleIndices = [0,1,2,3,4,5,6,7];\r\n  moduleName = 'Embed Compose';\r\n  color: string = '#4f545c'\r\n\r\n  disabled = true;\r\n  canSend = false;\r\n\r\n\r\n  hidden = {\r\n    messageContent: true,\r\n    title: true,\r\n    url: true,\r\n    image: true,\r\n    color: true,\r\n    description: true,\r\n    footer: {\r\n      text: true,\r\n      image: true\r\n    },\r\n    author: {\r\n      image: true,\r\n      url: true,\r\n      text: true\r\n    }\r\n  }\r\n\r\n\r\n  constructor(\r\n    guildService: GuildService,\r\n    route: ActivatedRoute,\r\n    saveChanges: MatSnackBar) {\r\n    super(guildService, route, saveChanges);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await super.init();\r\n    console.log(this.routeName)   \r\n    \r\n    this.form.valueChanges.subscribe(() => {\r\n      if(this.title || this.description) this.disabled = false;\r\n      else this.disabled = true;\r\n\r\n      let canSend = this.title || this.message || this.description\r\n\r\n      if(canSend && this.channel) this.canSend = true;\r\n      else this.canSend = false;\r\n    });\r\n  }\r\n  \r\n  buildForm() {\r\n    const formGroup = new FormGroup({\r\n      message: new FormControl('', [\r\n        Validators.maxLength(256) \r\n      ]),\r\n      channel: new FormControl(''),\r\n      title: new FormControl('', [ Validators.maxLength(126) ]),\r\n      description: new FormControl('', [ Validators.maxLength(256) ]),\r\n      footer: new FormControl('', [ Validators.maxLength(26) ]),\r\n      footerImage: new FormControl('', [ Validators.maxLength(256) ]),\r\n      authorImage: new FormControl('', [ Validators.maxLength(256) ]),\r\n      authorName: new FormControl('', [ Validators.maxLength(256) ]),\r\n      authorUrl: new FormControl('', [ Validators.maxLength(256) ]),\r\n      embedImage: new FormControl('', [ Validators.maxLength(256) ]),\r\n      url: new FormControl('', [ Validators.maxLength(256) ]),\r\n    });\r\n    return formGroup;\r\n  }\r\n\r\n  async send() {\r\n    if(!this.canSend) return;\r\n    console.log('send embed on discord.', this.dataToBeSent())\r\n    const channelId = this.form.get('channel').value;\r\n    await this.guildService.sendEmbed(this.guildId, channelId, this.dataToBeSent()).then((message) => {\r\n      alert(message.message)\r\n      console.log('embed sent.')\r\n    }).catch(err => {\r\n      console.log('error while sending embed.', err)\r\n    });\r\n  }\r\n\r\n  //get message value from form group\r\n  get message() { return this.form.get('message').value; }\r\n  get title() { return this.form.get('title').value; }\r\n  get description() { return this.form.get('description').value; }\r\n  get footerText() { return this.form.get('footer').value; }\r\n  get footerImage() { return this.form.get('footerImage').value; }\r\n  get authorImage() { return this.form.get('authorImage').value; }\r\n  get authorName() { return this.form.get('authorName').value; }\r\n  get authorUrl() { return this.form.get('authorUrl').value; }\r\n  get image() { return this.form.get('embedImage').value; }\r\n  get url() { return this.form.get('url').value; }\r\n  get channel() { return this.form.get('channel').value; }\r\n\r\n  dataToBeSent() {\r\n    return {\r\n      message: this.message,\r\n      title: this.title,\r\n      description: this.description,\r\n      footer: {\r\n        text: this.footerText,\r\n        icon: this.footerImage,\r\n\r\n      },\r\n      author: {\r\n        name: this.authorName,\r\n        url: this.authorUrl,\r\n        icon: this.authorImage,\r\n      },\r\n      image: this.image,\r\n      color: this.color,\r\n      url: this.url,\r\n    }\r\n  }\r\n\r\n  get author() {\r\n    return {\r\n      name: this.authorName,\r\n      url: this.authorUrl,\r\n      icon: this.authorImage,\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  endpoint = environment.endpoint + '/user';\r\n\r\n  private _user: any;\r\n  get user() { return this._user; }\r\n\r\n  private _crash: any;\r\n  get crash() {\r\n    return this._crash;\r\n  };\r\n\r\n  private _savedUser: any;\r\n  get savedUser() {\r\n    return this._savedUser;\r\n  }\r\n\r\n  get xpCardPreviewURL() {\r\n    return `${this.endpoint}/xp-card-preview?key=${this.key}`;\r\n  }\r\n\r\n  constructor(private http: HttpClient) {}\r\n  \r\n  private get key() {\r\n    return localStorage.getItem('key');\r\n  }\r\n\r\n  async init() {\r\n    if (!this.user || !this.savedUser || !this.crash)\r\n      await this.updateUser();\r\n  }\r\n\r\n  async updateUser() {\r\n    this._user = (this.key) ?\r\n      await this.http.get(`${this.endpoint}?key=${this.key}`).toPromise() : null\r\n    this._savedUser = (this.key) ? \r\n      await this.http.get(`${this.endpoint}/saved?key=${this.key}`).toPromise() : null;\r\n  }\r\n\r\n  updateXPCard(xpCard: XPCard) {\r\n    return this.http.put(`${this.endpoint}/xp-card?key=${this.key}`, xpCard).toPromise();\r\n  }\r\n\r\n  getReminders(): Promise<any> {\r\n    return this.http.get(`${this.endpoint}/reminders?key=${this.key}`).toPromise();\r\n  }\r\n\r\n  getXPCardPreviewURL(xpCard: XPCard) {\r\n    const { primary, secondary, tertiary, backgroundURL } = xpCard;\r\n    return `${this.endpoint}/xp-card-preview?key=${this.key}` +\r\n      `&primary=${primary}` +\r\n      `&secondary=${secondary}` +\r\n      `&tertiary=${tertiary}` +\r\n      `&backgroundURL=${backgroundURL}`;\r\n  }\r\n}\r\n\r\nexport interface XPCard {\r\n  primary: string;\r\n  secondary: string;\r\n  tertiary: string;\r\n  backgroundURL: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ModuleConfig } from '../module-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanDeactivateDashboard implements CanDeactivate<ModuleConfig> {\r\n  canDeactivate(\r\n    component: ModuleConfig,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot) {\r\n    return !Boolean(component.saveChanges?._openedSnackBarRef);\r\n  }\r\n  \r\n}\r\n","<guild-sidebar [waitFor]=\"savedGuild\">\r\n    <div *ngIf=\"form\" class=\"container\">\r\n        <h1 class=\"display-3\">Settings</h1>\r\n        <hr>\r\n        <form #f=\"ngForm\" [formGroup]=\"form\">\r\n            <div class=\"col-lg-4 col-sm-6\">\r\n                <label class=\"mr-2\" style=\"margin-right: 2px;\">Private Leaderboard</label>\r\n                <mat-checkbox formControlName=\"privateLeaderboard\" style=\"margin-top: 2px;\"></mat-checkbox>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</guild-sidebar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ModuleConfig } from '../../../module-config';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { GuildService } from '../../../services/guild.service';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-settings-module',\r\n  templateUrl: './settings-module.component.html',\r\n  styleUrls: ['./settings-module.component.css']\r\n})\r\nexport class SettingsModuleComponent extends ModuleConfig implements OnInit {\r\n  moduleName = 'settings';\r\n  ServerLockdown : boolean;\r\n\r\n  constructor(\r\n    guildService: GuildService,\r\n    route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    saveChanges: MatSnackBar) {\r\n    super(guildService, route, saveChanges);\r\n  };\r\n\r\n  async ngOnInit() {\r\n    await super.init();\r\n  };\r\n\r\n  buildForm({ settings }: any) {\r\n    return new FormGroup({\r\n      privateLeaderboard: new FormControl(settings.privateLeaderboard ?? false),\r\n      //lockdown: new FormControl(settings.lockdown ?? false),\r\n    });\r\n  };\r\n};\r\n","import { Directive, Component, ElementRef } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Directive({\r\n  selector: '[premium]'\r\n})\r\nexport class PremiumDirective {\r\n  el: HTMLElement;\r\n\r\n  constructor(elementRef?: ElementRef) {\r\n    if (!elementRef) return;\r\n\r\n    this.el = elementRef.nativeElement as HTMLInputElement;\r\n    this.el.onclick = () => alert('plz pay for plus\\n\\n\\n\\nokthanksbye');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent {}\r\n","<div class=\"stars\">\r\n    <div class=\"central-body\">\r\n        <img class=\"image-404\" src=\"assets\\img\\404.svg\" width=\"300px\">\r\n        <a class=\"btn-go-home\" routerLink=\"/\">RETURN HOME</a>\r\n    </div>\r\n    <div class=\"objects\">\r\n        <img class=\"object_rocket\" src=\"assets\\img\\rocket.svg\" width=\"40px\">\r\n        <div class=\"earth-moon\">\r\n            <img class=\"object_earth\" src=\"assets\\img\\earth.svg\" width=\"100px\">\r\n            <img class=\"object_moon\" src=\"assets\\img\\moon.svg\" width=\"80px\">\r\n            <img class=\"object_mars\" src=\"assets\\img\\mars.svg\">\r\n        </div>\r\n        <div class=\"box_astronaut\">\r\n            <img class=\"object_astronaut\" src=\"assets\\img\\midnight-avatar-transparent.png\" width=\"140px\">\r\n        </div>\r\n    </div>\r\n    <div class=\"glowing_stars\">\r\n        <div class=\"star\"></div>\r\n        <div class=\"star\"></div>\r\n        <div class=\"star\"></div>\r\n        <div class=\"star\"></div>\r\n        <div class=\"star\"></div>\r\n    </div>\r\n</div>\r\n<footer>\r\n    <p class=\"float-right text-muted\">stardewfemboy.xyz</p>\r\n</footer>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'durationString'\r\n})\r\nexport class DurationStringPipe implements PipeTransform {\r\n\r\n  transform(value: number | string) {\r\n    const seconds = Number(value);\r\n    return `${Math.floor(seconds / 60)}:${Math.floor(seconds % 60).toString().padStart(2, '0')}`;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\nimport { CommandsComponent } from './pages/commands/commands.component';\r\nimport { AuthComponent } from './pages/auth/auth/auth.component';\r\nimport { LoginComponent } from './pages/auth/login/login.component';\r\nimport { InviteComponent } from './pages/auth/invite/invite.component';\r\nimport { LogoutComponent } from './pages/auth/logout/logout.component';\r\nimport { DashboardOverviewComponent } from './dashboard/dashboard/dashboard-overview/dashboard-overview.component';\r\nimport { GuildComponent } from './dashboard/guild/guild/guild.component';\r\nimport { DashboardAuthGuard } from './guards/dashboard-auth.guard';\r\nimport { GuildAuthGuard } from './guards/guild-auth.guard';\r\nimport { GeneralModuleComponent } from './dashboard/guild/general-module/general-module.component';\r\nimport { LevelingModuleComponent } from './dashboard/guild/leveling-module/leveling-module.component';\r\nimport { MusicModuleComponent } from './dashboard/guild/music-module/music-module.component';\r\nimport { AutoModModuleComponent } from './dashboard/guild/auto-mod-module/auto-mod-module.component';\r\nimport { LogsModuleComponent } from './dashboard/guild/logs-module/logs-module.component';\r\nimport { LogModuleComponent } from './dashboard/guild/log-module/log-module.component';\r\nimport { SettingsModuleComponent } from './dashboard/dashboard/settings-module/settings-module.component';\r\nimport { LeaderboardModuleComponent } from './dashboard/guild/leaderboard-module/leaderboard-module.component';\r\nimport { LeaderboardAuthGuard } from './guards/leaderboard-auth.guard';\r\nimport { XPCardComponent } from './xp-card/xp-card.component';\r\nimport { PaymentSuccessComponent } from './pages/payment-success/payment-success.component';\r\nimport { PlusComponent } from './pages/plus/plus/plus.component';\r\nimport { CanDeactivateDashboard } from './guards/can-deactivate-dashboard.guard';\r\nimport { ReactionRolesModuleComponent } from './dashboard/dashboard/reaction-roles-module/reaction-roles-module.component';\r\nimport { StatsComponent } from './stats/stats.component';\r\nimport { CaptchaModuleComponent } from './dashboard/guild/captcha-module/captcha-module.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport { WarningsModuleComponent } from './dashboard/guild/warnings-module/warnings-module.component';\r\nimport { EmbedComposeModuleComponent } from './dashboard/guild/compose-embed-module/compose-embed.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'commands', component: CommandsComponent },\r\n  { path: 'auth', component: AuthComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'logout', component: LogoutComponent },\r\n  { path: 'stats', component: StatsComponent },\r\n  { path: 'invite', component: InviteComponent },\r\n  { path: 'leaderboard/:id', component: LeaderboardModuleComponent, canActivate: [LeaderboardAuthGuard] },\r\n\r\n  { path: 'dashboard', component: DashboardOverviewComponent, canActivate: [DashboardAuthGuard] },\r\n  { path: 'dashboard/xp-card', component: XPCardComponent, canActivate: [DashboardAuthGuard] },\r\n\r\n  { path: 'dashboard/admin/:id', component: GuildComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/auto-mod', component: AutoModModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/captcha', component: CaptchaModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/general', component: GeneralModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/music', component: MusicModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/leveling', component: LevelingModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/embed', component: EmbedComposeModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/log', component: LogModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/logs', component: LogsModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/reaction-roles', component: ReactionRolesModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/settings', component: SettingsModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n  { path: 'servers/:id/warnings', component: WarningsModuleComponent, canActivate: [GuildAuthGuard], canDeactivate: [CanDeactivateDashboard] },\r\n\r\n  { path: 'plus', component: PlusComponent },\r\n  { path: 'payment-success', component: PaymentSuccessComponent },\r\n  { path: '**', component: NotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { initialNavigation: 'enabled' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-xpcard',\r\n  templateUrl: './xp-card.component.html',\r\n  styleUrls: ['./xp-card.component.css']\r\n})\r\nexport class XPCardComponent implements OnInit {\r\n  xpCardURL = '';\r\n\r\n  get user() { return this.userService.user; }\r\n\r\n  constructor(private userService: UserService) {}\r\n\r\n  async ngOnInit() {\r\n    this.updateXPCard();\r\n  }\r\n\r\n  updateXPCard() {\r\n    const randomString = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n    this.xpCardURL = this.userService.xpCardPreviewURL + `&cache=${randomString}`;\r\n  }\r\n}\r\n","<dashboard-sidebar>\r\n    <section class=\"container\">\r\n        <customize-xp-card #customize\r\n            hidden></customize-xp-card>\r\n        <h2 class=\"display-3\">XP Card</h2>\r\n        <hr>\r\n        <div class=\"float-none\">\r\n            <img [src]=\"xpCardURL\" alt=\"Your XP Card\">\r\n        </div>\r\n        <div class=\"config\" title=\"Customize\">\r\n            <button data-toggle=\"modal\" data-target=\"#customize\">\r\n                <i class=\"fa fa-paint-brush\" aria-hidden=\"true\"></i>\r\n            </button>\r\n        </div>\r\n    </section>\r\n</dashboard-sidebar>\r\n\r\n<div class=\"modal fade\" id=\"customize\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"customize\" aria-hidden=\"true\">\r\n    <customize-xp-card (xpCardUpdate)=\"updateXPCard()\"></customize-xp-card>\r\n</div>","<div class=\"row\">\r\n  <div class=\"col-md-3\">\r\n    <h5>{{ reversed ? 'Least' : 'Most' }} Popular Commands</h5>\r\n  </div>\r\n  <div class=\"col-md-9\">\r\n      <canvas *ngIf=\"chartReady\" baseChart\r\n          [datasets]=\"barChartData\"\r\n          [labels]=\"barChartLabels\"\r\n          [options]=\"barChartOptions\"\r\n          [plugins]=\"barChartPlugins\"\r\n          [legend]=\"barChartLegend\"\r\n          [chartType]=\"barChartType\">\r\n      </canvas>\r\n  </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport pluginDataLabels from 'chartjs-plugin-datalabels';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'popular-commands-graph',\r\n  templateUrl: './popular-commands-graph.component.html',\r\n  styleUrls: ['./popular-commands-graph.component.css']\r\n})\r\nexport class PopularCommandsGraphComponent implements OnInit {\r\n  @Input() stats: any;\r\n  @Input() reversed = false;\r\n\r\n  chartReady = false;\r\n  \r\n  barChartOptions: ChartOptions = {\r\n    responsive: false,\r\n    scales: {\r\n      yAxes: [{ display: false }],\r\n      xAxes: [{ display: false }]\r\n    },\r\n    plugins: {\r\n      datalabels: { anchor: 'end', align: 'end' }\r\n    }\r\n  };\r\n  barChartLabels = [];\r\n  barChartType: ChartType = 'bar';\r\n  barChartLegend = true;\r\n  barChartPlugins = [pluginDataLabels];\r\n\r\n  barChartData: ChartDataSets[] = [];\r\n\r\n  constructor(private api: ApiService) {}\r\n    \r\n  async ngOnInit() {\r\n    this.stats = this.stats ?? await this.api.getStats();\r\n\r\n    this.barChartLabels = this.buildLabels();\r\n    this.barChartData = this.buildDataSets();\r\n    \r\n    this.chartReady = true;\r\n  }\r\n\r\n  buildLabels() {\r\n    const labels = this.stats.commands\r\n      .map(c => c.name)\r\n      .slice(0, 10);\r\n    return (this.reversed) ? labels.reverse() : labels;\r\n  }\r\n\r\n  buildDataSets() {\r\n    const data = this.stats.commands.map(s => s.count);\r\n    return [\r\n      {\r\n        data: (this.reversed) ? data.reverse() : data,\r\n        label: 'Commands'\r\n      }\r\n    ];\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GuildService } from '../../../services/guild.service';\r\nimport { UserService } from '../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\n\r\nexport class AuthComponent implements OnInit {\r\n  \r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private guildService: GuildService,\r\n    private userService: UserService) {}\r\n\r\n  async ngOnInit() {\r\n    //const key = this.route.snapshot.queryParamMap.get('key'); \r\n    //localStorage.setItem('key', key);\r\n    //await this.userService.updateUser();\r\n    //await this.guildService.updateGuilds();\r\n    //\r\n    //this.router.navigate(['/dashboard']);\r\n    try {\r\n      const key = this.route.snapshot.queryParamMap.get('key'); \r\n      localStorage.setItem('key', key);\r\n    \r\n      await this.userService.updateUser();\r\n      await this.guildService.updateGuilds();\r\n      \r\n      this.router.navigate(['/dashboard']);\r\n    } catch(e) {\r\n      console.log(e.message);\r\n      alert('Invalid key - check console');\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  \r\n}","<spinner></spinner>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'waves',\r\n  templateUrl: './waves.component.html',\r\n  styleUrls: ['./waves.component.css']\r\n})\r\nexport class WavesComponent {\r\n  @Input() inverted = false;\r\n}\r\n","<svg class=\"waves\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n    viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shape-rendering=\"auto\"\r\n    [style.transform]=\"inverted ? 'rotate(180deg)' : ''\">\r\n    <defs>\r\n        <path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\r\n    </defs>\r\n    <g class=\"parallax\">\r\n        <use id=\"wave1\" xlink:href=\"#gentle-wave\" x=\"48\" y=\"0\" />\r\n        <use id=\"wave2\" xlink:href=\"#gentle-wave\" x=\"48\" y=\"3\" />\r\n        <use id=\"wave3\" xlink:href=\"#gentle-wave\" x=\"48\" y=\"5\" />\r\n    </g>\r\n</svg>","<div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n        <h5>Recent Commands</h5>\r\n    </div>\r\n    <div class=\"col-md-9\">\r\n        <canvas *ngIf=\"chartReady\" baseChart\r\n            [datasets]=\"barChartData\"\r\n            [labels]=\"barChartLabels\"\r\n            [options]=\"barChartOptions\"\r\n            [plugins]=\"barChartPlugins\"\r\n            [legend]=\"barChartLegend\"\r\n            [chartType]=\"barChartType\">\r\n        </canvas>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ChartDataSets, ChartOptions, ChartType, ChartColor } from 'chart.js';\r\nimport pluginDataLabels from 'chartjs-plugin-datalabels';\r\nimport { GuildService } from 'src/app/services/guild.service';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Component({\r\n  selector: 'commands-widget',\r\n  templateUrl: './commands-widget.component.html',\r\n  styleUrls: ['./commands-widget.component.css']\r\n})\r\nexport class CommandsWidgetComponent implements OnInit {\r\n  commands: any;\r\n\r\n  chartReady = false;\r\n  \r\n  barChartOptions: ChartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [{ display: false }],\r\n      xAxes: [{ display: false }]\r\n    },\r\n    plugins: {\r\n      datalabels: { anchor: 'end', align: 'end' }\r\n    }\r\n  };\r\n  barChartLabels = [];\r\n  barChartType: ChartType = 'line';\r\n  barChartLegend = true;\r\n  barChartPlugins = [pluginDataLabels];\r\n\r\n  barChartData: ChartDataSets[] = [];\r\n\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private route: ActivatedRoute) {}\r\n    \r\n  async ngOnInit() {\r\n    this.route.paramMap.subscribe(async(val) => {\r\n      const id = val.get('id');\r\n\r\n      const log = await this.guildService.getSavedLog(environment.guildId);\r\n      this.commands = log.commands;\r\n  \r\n      this.barChartLabels = this.buildLabels();\r\n      this.barChartData = this.buildDataSets();\r\n      \r\n      this.chartReady = true;\r\n    });\r\n  }\r\n\r\n  buildLabels() {\r\n    const labels: string[] = [];\r\n    for (let i = 6; i >= 0; i--) {\t\t\r\n      const date = new Date();\r\n      date.setDate(date.getDate() - i);\r\n\r\n      labels.push(this.ddMM(date));\r\n    }    \r\n    return labels;\r\n  }\r\n\r\n  buildDataSets() {\r\n    const commonCommand = 'ping'; \r\n\r\n    const sets = [\r\n      { data: [0,0,0,0,0,0,0], label: 'All', borderColor: \"#595AFF\", backgroundColor: \"rgb(62, 63, 178, 0.2)\", pointBackgroundColor: \"rgb(62, 63, 178)\" },\r\n      { data: [0,0,0,0,0,0,0], label: commonCommand, borderColor: \"#FF6328\", backgroundColor: \"rgb(204, 79, 32, 0.2)\", pointBackgroundColor: \"rgb(204, 79, 32)\" }]; //borderColor: \"#6DE3C8\", backgroundColor: \"#1FDFB2\" \r\n      \r\n    for (const command of this.commands) {\r\n      const ddMM = this.ddMM(new Date(command.at));      \r\n      const dayIndex = this.barChartLabels.indexOf(ddMM);\r\n\r\n      sets[0].data[dayIndex]++;\r\n      if (command.name === commonCommand)\r\n        sets[1].data[dayIndex]++;\r\n    }\r\n    return sets;\r\n  }\r\n\r\n  private ddMM(date: Date) {\r\n    return `${date.getDate()}/${(date.getMonth() + 1)}`;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n","import { Component } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-invite',\r\n  templateUrl: './invite.component.html',\r\n  styleUrls: ['./invite.component.css']\r\n})\r\nexport class InviteComponent {\r\n  url = `${environment.discordInvite}`;\r\n\r\n  constructor() {\r\n    window.location.assign(this.url);\r\n  }\r\n}\r\n","<spinner></spinner>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}